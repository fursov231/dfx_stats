{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\furso\\\\Desktop\\\\stat.farm\\\\components\\\\COMPDistributionCalculator.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ReactTable from 'react-table-6'; // React-table\n\nimport { useState, useEffect } from 'react'; // State storage for calculations\n\nexport default function COMPDistributionCalculator(props) {\n  // Initialize distribution input state holder\n  const {\n    0: distribution,\n    1: setDistribution\n  } = useState({\n    \"supply\": {\n      'DAI': 0,\n      'USDC': 0,\n      'ETH': 0,\n      'USDT': 0,\n      'ZRX': 0,\n      'REP': 0,\n      'BAT': 0,\n      'WBTC': 0,\n      'SAI': 0\n    },\n    \"borrow\": {\n      'DAI': 0,\n      'USDC': 0,\n      'ETH': 0,\n      'USDT': 0,\n      'ZRX': 0,\n      'REP': 0,\n      'BAT': 0,\n      'WBTC': 0,\n      'SAI': 0\n    }\n  }); // On change in distribution, re-calculate token distribution\n\n  useEffect(() => calculateValues(), [distribution]); // Setup hooks to hold input values.\n  // This could have been one item but this is easier to manage.\n\n  const {\n    0: interest_earned,\n    1: set_interest_earned\n  } = useState(0);\n  const {\n    0: interest_paid,\n    1: set_interest_paid\n  } = useState(0);\n  const {\n    0: comp_earned,\n    1: set_comp_earned\n  } = useState(0);\n  const {\n    0: comp_earned_usd,\n    1: set_comp_earned_usd\n  } = useState(0);\n  const {\n    0: net_earnings,\n    1: set_net_earnings\n  } = useState(0);\n  const {\n    0: net_apy,\n    1: set_net_apy\n  } = useState(0); // Update distribution function\n\n  function updateDistribution(type, symbol, value) {\n    let opposite = _objectSpread({}, distribution[type === 'supply' ? 'borrow' : 'supply']);\n\n    let existing = _objectSpread({}, distribution[type === 'supply' ? 'supply' : 'borrow']); // Mutate object depending on input field\n\n\n    setDistribution({\n      [type === 'supply' ? 'borrow' : 'supply']: _objectSpread({}, opposite),\n      [type === 'supply' ? 'supply' : 'borrow']: _objectSpread(_objectSpread({}, existing), {}, {\n        [symbol]: isNaN(value) ? 0 : value\n      })\n    });\n  } // Calculate COMP distribution\n\n\n  function calculateValues() {\n    let comp_earned = 0; // Total COMP Earned\n\n    let int_earned = 0; // Earned interest\n\n    let int_paid = 0; // Paid interest\n\n    let sum_amount = 0; // Sum of supplied or borrowed\n    // Loop through supplied tokens\n\n    for (var key in distribution.supply) {\n      // If supplied value > $0\n      if (parseFloat(distribution.supply[key]) > 0) {\n        // Loop through Compound-supported tokens\n        for (let i = 0; i < props.data.length; i++) {\n          // Search for matching token and increment values\n          if (props.data[i].symbol === key) {\n            int_earned += parseFloat(distribution.supply[key]) * (parseFloat(props.data[i].supply_apy) / 100);\n            comp_earned += parseFloat(distribution.supply[key]) / props.data[i].gross_supply * props.data[i].comp_allocation;\n            sum_amount += parseFloat(distribution.supply[key]);\n          }\n        }\n      }\n    } // Loop through borrowed tokens\n\n\n    for (var key in distribution.borrow) {\n      // If borrowed value > $0\n      if (parseFloat(distribution.borrow[key]) > 0) {\n        // Loop through Compound-supported tokens\n        for (let i = 0; i < props.data.length; i++) {\n          // Search for matching tokens and increment values\n          if (props.data[i].symbol === key) {\n            int_paid += parseFloat(distribution.borrow[key]) * (parseFloat(props.data[i].borrow_apy) / 100);\n            comp_earned += parseFloat(distribution.borrow[key]) / props.data[i].gross_borrow * props.data[i].comp_allocation;\n            sum_amount += parseFloat(distribution.borrow[key]);\n          }\n        }\n      }\n    } // Net earnings calculations\n\n\n    let net_earnings = comp_earned * props.price + int_earned - int_paid; // Update state with appropriate calculations\n\n    set_comp_earned(Number(comp_earned.toFixed(2)));\n    set_comp_earned_usd(Number((comp_earned * props.price).toFixed(2)));\n    set_interest_earned(Number(int_earned.toFixed(2)));\n    set_interest_paid(Number(int_paid.toFixed(2)));\n    set_net_earnings(Number(net_earnings.toFixed(2)));\n    set_net_apy((net_earnings / sum_amount * 100).toFixed(2));\n  } // React-table setup\n\n\n  const columns = [{\n    Header: 'Market',\n    Accessor: 'image',\n    Cell: row => __jsx(MarketItem, _extends({}, row.original, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 60\n      }\n    }))\n  }, {\n    Header: 'Gross Supply',\n    Accessor: 'gross_supply',\n    Cell: row => __jsx(FormatItem, _extends({}, row.original, {\n      type: \"supply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 73\n      }\n    }))\n  }, {\n    Header: 'Supply APY',\n    Accessor: 'supply_apy',\n    Cell: row => __jsx(FormatItemAPY, _extends({}, row.original, {\n      type: \"supply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 69\n      }\n    }))\n  }, {\n    Header: '$ Supplied',\n    Accessor: 'gross_supply',\n    Cell: row => __jsx(CalcCell, _extends({}, row.original, {\n      type: \"supply\",\n      updateDistribution: updateDistribution,\n      distribution: distribution,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 71\n      }\n    }))\n  }, {\n    Header: 'Gross Borrow',\n    Accessor: 'gross_borrow',\n    Cell: row => __jsx(FormatItem, _extends({}, row.original, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 73\n      }\n    }))\n  }, {\n    Header: 'Borrow APY',\n    Accessor: 'borrow_apy',\n    Cell: row => __jsx(FormatItemAPY, _extends({}, row.original, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 69\n      }\n    }))\n  }, {\n    Header: '$ Borrowed',\n    Accessor: 'gross_borrow',\n    Cell: row => __jsx(CalcCell, _extends({}, row.original, {\n      updateDistribution: updateDistribution,\n      distribution: distribution,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 71\n      }\n    }))\n  }];\n  return __jsx(React.Fragment, null, __jsx(ReactTable, {\n    data: props.data,\n    columns: columns,\n    showPagination: false,\n    defaultPageSize: props.data.length,\n    resizable: false,\n    className: \"comp-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-1461891372\" + \" \" + \"token-distribution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Calculated token distribution\"), __jsx(\"br\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"comp-earned\",\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"COMP Earned\"), __jsx(\"input\", {\n    id: \"comp-earned\",\n    value: comp_earned.toLocaleString(),\n    placeholder: \"0\",\n    readOnly: true,\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"comp-earned-usd\",\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"COMP Earned (USD)\"), __jsx(\"input\", {\n    id: \"comp-earned-usd\",\n    value: \"$\" + comp_earned_usd.toLocaleString(),\n    placeholder: \"$0\",\n    readOnly: true,\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"interest-earned\",\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Interest Earned\"), __jsx(\"input\", {\n    id: \"interest-earned\",\n    value: \"$\" + interest_earned.toLocaleString(),\n    placeholder: \"$0\",\n    readOnly: true,\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"interest-paid\",\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Interest Paid\"), __jsx(\"input\", {\n    id: \"interest-paid\",\n    value: \"$\" + interest_paid.toLocaleString(),\n    placeholder: \"$0\",\n    readOnly: true,\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"net-earnings\",\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"Net Earnings\"), __jsx(\"input\", {\n    id: \"net-earnings\",\n    value: \"$\" + net_earnings.toLocaleString(),\n    placeholder: \"$0\",\n    readOnly: true,\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"net-apy\",\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, \"Net APY\"), __jsx(\"input\", {\n    id: \"net-apy\",\n    value: isNaN(net_apy) ? '0%' : net_apy.toLocaleString() + \"%\",\n    placeholder: \"0%\",\n    readOnly: true,\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }))), __jsx(_JSXStyle, {\n    id: \"1461891372\",\n    __self: this\n  }, \".token-distribution{width:calc(100% - 80px);margin:20px;padding:20px;background-color:rgba(214,2,44,0.1);border:1px solid rgb(214,2,44);border-radius:5px;text-align:center;}.token-distribution>span{font-weight:bold;-webkit-text-decoration:underline;text-decoration:underline;}.token-distribution>div{display:inline-block;padding:5px;}.token-distribution>div>label{display:block;}.token-distribution>div>input{display:block;height:30px;margin-top:5px;border:1px solid #ccc;border-radius:5px;text-align:center;font-size:17px;width:160px;}.-header{height:30px;border-bottom:1px solid #e7eaf3;box-shadow:none !important;}.-header>.rt-tr{font-size:13px;font-weight:bold;color:#AAB8C1;line-height:30px;}.rt-tbody,.rt-thead{min-width:1055px !important;}.-header>.rt-tr>.rt-th:nth-of-type(1)>div{padding-left:25px;}.-loading{display:none;}.-even{background-color:#FDFDFD;}.rt-th{text-align:left;}.rt-th,.rt-td{border-right:none !important;}.rt-td{border-bottom:none;}.rt-tr>.rt-th:nth-of-type(1),.rt-tr>.rt-td:nth-of-type(1){width:275px !important;}.rt-tr>.rt-th:nth-of-type(2),.rt-tr>.rt-td:nth-of-type(2){width:100px !important;}.rt-tr>.rt-th:nth-of-type(3),.rt-tr>.rt-td:nth-of-type(3){width:90px !important;}.rt-tr>.rt-th:nth-of-type(4),.rt-tr>.rt-td:nth-of-type(4){width:200px !important;}.rt-tr>.rt-th:nth-of-type(5),.rt-tr>.rt-td:nth-of-type(5){width:100px !important;}.rt-tr>.rt-th:nth-of-type(6),.rt-tr>.rt-td:nth-of-type(6){width:90px !important;}.rt-tr>.rt-th:nth-of-type(7),.rt-tr>.rt-td:nth-of-type(7){width:200px !important;}.rt-tr>.rt-td{padding:0px;}.comp-table{border:none;}.ReactTable .rt-tbody .rt-tr-group:last-child{border-bottom:1px solid rgba(0,0,0,.05);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\COMPDistributionCalculator.js */\"));\n} // Market image + symbol + name cell formatting\n\nfunction MarketItem(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-1458341634\" + \" \" + \"marketItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: props.image,\n    alt: `${props.symbol} logo`,\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, props.name), __jsx(\"br\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }), __jsx(\"span\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, props.symbol))), __jsx(_JSXStyle, {\n    id: \"1458341634\",\n    __self: this\n  }, \".marketItem.jsx-1458341634{display:inline-block;height:70px;width:270px;}.marketItem.jsx-1458341634>div.jsx-1458341634{display:inline-block;height:100%;}.marketItem.jsx-1458341634>div.jsx-1458341634:nth-child(1){width:80px;vertical-align:top;}.marketItem.jsx-1458341634>div.jsx-1458341634:nth-child(2){width:190px;vertical-align:top;}.marketItem.jsx-1458341634>div.jsx-1458341634>img.jsx-1458341634{height:43.5px;width:43.5px;-webkit-transform:translate(18.25px,13.25px);-ms-transform:translate(18.25px,13.25px);transform:translate(18.25px,13.25px);}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634{display:inline-block;-webkit-transform:translateY(19px);-ms-transform:translateY(19px);transform:translateY(19px);}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634:nth-of-type(1){font-weight:bold;}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634:nth-of-type(2){color:#ACBBC2;font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZnVyc29cXERlc2t0b3BcXHN0YXQuZmFybVxcY29tcG9uZW50c1xcQ09NUERpc3RyaWJ1dGlvbkNhbGN1bGF0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK1F3QixBQUdzQyxBQUtBLEFBSVYsQUFJQyxBQUlFLEFBS08sQUFJSixBQUdILFdBbkJLLENBSUEsRUFJTixBQVlFLEdBSG5CLElBMUJnQixBQUtBLEFBaUJlLE1BSlcsRUFZMUMsQ0FwQkEsQ0FJQSxFQWJnQixBQUtoQixZQUpBLHFFQXFCQSxvQ0FKQSIsImZpbGUiOiJDOlxcVXNlcnNcXGZ1cnNvXFxEZXNrdG9wXFxzdGF0LmZhcm1cXGNvbXBvbmVudHNcXENPTVBEaXN0cmlidXRpb25DYWxjdWxhdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0VGFibGUgZnJvbSAncmVhY3QtdGFibGUtNicgLy8gUmVhY3QtdGFibGVcclxuaW1wb3J0IHt1c2VTdGF0ZSwgdXNlRWZmZWN0fSBmcm9tICdyZWFjdCcgLy8gU3RhdGUgc3RvcmFnZSBmb3IgY2FsY3VsYXRpb25zXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDT01QRGlzdHJpYnV0aW9uQ2FsY3VsYXRvcihwcm9wcykge1xyXG4gICAgLy8gSW5pdGlhbGl6ZSBkaXN0cmlidXRpb24gaW5wdXQgc3RhdGUgaG9sZGVyXHJcbiAgICBjb25zdCBbZGlzdHJpYnV0aW9uLCBzZXREaXN0cmlidXRpb25dID0gdXNlU3RhdGUoe1xyXG4gICAgICAgIFwic3VwcGx5XCI6IHtcclxuICAgICAgICAgICAgJ0RBSSc6IDAsXHJcbiAgICAgICAgICAgICdVU0RDJzogMCxcclxuICAgICAgICAgICAgJ0VUSCc6IDAsXHJcbiAgICAgICAgICAgICdVU0RUJzogMCxcclxuICAgICAgICAgICAgJ1pSWCc6IDAsXHJcbiAgICAgICAgICAgICdSRVAnOiAwLFxyXG4gICAgICAgICAgICAnQkFUJzogMCxcclxuICAgICAgICAgICAgJ1dCVEMnOiAwLFxyXG4gICAgICAgICAgICAnU0FJJzogMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXCJib3Jyb3dcIjoge1xyXG4gICAgICAgICAgICAnREFJJzogMCxcclxuICAgICAgICAgICAgJ1VTREMnOiAwLFxyXG4gICAgICAgICAgICAnRVRIJzogMCxcclxuICAgICAgICAgICAgJ1VTRFQnOiAwLFxyXG4gICAgICAgICAgICAnWlJYJzogMCxcclxuICAgICAgICAgICAgJ1JFUCc6IDAsXHJcbiAgICAgICAgICAgICdCQVQnOiAwLFxyXG4gICAgICAgICAgICAnV0JUQyc6IDAsXHJcbiAgICAgICAgICAgICdTQUknOiAwXHJcbiAgICAgICAgfX0pO1xyXG5cclxuICAgIC8vIE9uIGNoYW5nZSBpbiBkaXN0cmlidXRpb24sIHJlLWNhbGN1bGF0ZSB0b2tlbiBkaXN0cmlidXRpb25cclxuICAgIHVzZUVmZmVjdCgoKSA9PiBjYWxjdWxhdGVWYWx1ZXMoKSwgW2Rpc3RyaWJ1dGlvbl0pO1xyXG5cclxuICAgIC8vIFNldHVwIGhvb2tzIHRvIGhvbGQgaW5wdXQgdmFsdWVzLlxyXG4gICAgLy8gVGhpcyBjb3VsZCBoYXZlIGJlZW4gb25lIGl0ZW0gYnV0IHRoaXMgaXMgZWFzaWVyIHRvIG1hbmFnZS5cclxuICAgIGNvbnN0IFtpbnRlcmVzdF9lYXJuZWQsIHNldF9pbnRlcmVzdF9lYXJuZWRdID0gdXNlU3RhdGUoMCk7XHJcbiAgICBjb25zdCBbaW50ZXJlc3RfcGFpZCwgc2V0X2ludGVyZXN0X3BhaWRdID0gdXNlU3RhdGUoMCk7XHJcbiAgICBjb25zdCBbY29tcF9lYXJuZWQsIHNldF9jb21wX2Vhcm5lZF0gPSB1c2VTdGF0ZSgwKTtcclxuICAgIGNvbnN0IFtjb21wX2Vhcm5lZF91c2QsIHNldF9jb21wX2Vhcm5lZF91c2RdID0gdXNlU3RhdGUoMCk7XHJcbiAgICBjb25zdCBbbmV0X2Vhcm5pbmdzLCBzZXRfbmV0X2Vhcm5pbmdzXSA9IHVzZVN0YXRlKDApO1xyXG4gICAgY29uc3QgW25ldF9hcHksIHNldF9uZXRfYXB5XSA9IHVzZVN0YXRlKDApO1xyXG5cclxuICAgIC8vIFVwZGF0ZSBkaXN0cmlidXRpb24gZnVuY3Rpb25cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZURpc3RyaWJ1dGlvbih0eXBlLCBzeW1ib2wsIHZhbHVlKSB7XHJcbiAgICAgICAgbGV0IG9wcG9zaXRlID0gey4uLmRpc3RyaWJ1dGlvblt0eXBlID09PSAnc3VwcGx5JyA/ICdib3Jyb3cnIDogJ3N1cHBseSddfTtcclxuICAgICAgICBsZXQgZXhpc3RpbmcgPSB7Li4uZGlzdHJpYnV0aW9uW3R5cGUgPT09ICdzdXBwbHknID8gJ3N1cHBseScgOiAnYm9ycm93J119XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gTXV0YXRlIG9iamVjdCBkZXBlbmRpbmcgb24gaW5wdXQgZmllbGRcclxuICAgICAgICBzZXREaXN0cmlidXRpb24oe1xyXG4gICAgICAgICAgICBbdHlwZSA9PT0gJ3N1cHBseScgPyAnYm9ycm93JyA6ICdzdXBwbHknXToge1xyXG4gICAgICAgICAgICAgICAgLi4ub3Bwb3NpdGVcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgW3R5cGUgPT09ICdzdXBwbHknID8gJ3N1cHBseScgOiAnYm9ycm93J106IHtcclxuICAgICAgICAgICAgICAgIC4uLmV4aXN0aW5nLFxyXG4gICAgICAgICAgICAgICAgW3N5bWJvbF06IGlzTmFOKHZhbHVlKSA/IDAgOiB2YWx1ZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIENPTVAgZGlzdHJpYnV0aW9uXHJcbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVWYWx1ZXMoKSB7XHJcbiAgICAgICAgbGV0IGNvbXBfZWFybmVkID0gMDsgLy8gVG90YWwgQ09NUCBFYXJuZWRcclxuICAgICAgICBsZXQgaW50X2Vhcm5lZCA9IDA7IC8vIEVhcm5lZCBpbnRlcmVzdFxyXG4gICAgICAgIGxldCBpbnRfcGFpZCA9IDA7IC8vIFBhaWQgaW50ZXJlc3RcclxuICAgICAgICBsZXQgc3VtX2Ftb3VudCA9IDA7IC8vIFN1bSBvZiBzdXBwbGllZCBvciBib3Jyb3dlZFxyXG5cclxuICAgICAgICAvLyBMb29wIHRocm91Z2ggc3VwcGxpZWQgdG9rZW5zXHJcbiAgICAgICAgZm9yICh2YXIga2V5IGluIGRpc3RyaWJ1dGlvbi5zdXBwbHkpIHtcclxuICAgICAgICAgICAgLy8gSWYgc3VwcGxpZWQgdmFsdWUgPiAkMFxyXG4gICAgICAgICAgICBpZiAocGFyc2VGbG9hdChkaXN0cmlidXRpb24uc3VwcGx5W2tleV0pID4gMCkge1xyXG4gICAgICAgICAgICAgICAgLy8gTG9vcCB0aHJvdWdoIENvbXBvdW5kLXN1cHBvcnRlZCB0b2tlbnNcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvcHMuZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFNlYXJjaCBmb3IgbWF0Y2hpbmcgdG9rZW4gYW5kIGluY3JlbWVudCB2YWx1ZXNcclxuICAgICAgICAgICAgICAgICAgICBpZiAocHJvcHMuZGF0YVtpXS5zeW1ib2wgPT09IGtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRfZWFybmVkICs9IHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLnN1cHBseVtrZXldKSAqIChwYXJzZUZsb2F0KHByb3BzLmRhdGFbaV0uc3VwcGx5X2FweSkgLyAxMDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wX2Vhcm5lZCArPSAocGFyc2VGbG9hdChkaXN0cmlidXRpb24uc3VwcGx5W2tleV0pIC8gcHJvcHMuZGF0YVtpXS5ncm9zc19zdXBwbHkpICogcHJvcHMuZGF0YVtpXS5jb21wX2FsbG9jYXRpb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1bV9hbW91bnQgKz0gcGFyc2VGbG9hdChkaXN0cmlidXRpb24uc3VwcGx5W2tleV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gTG9vcCB0aHJvdWdoIGJvcnJvd2VkIHRva2Vuc1xyXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBkaXN0cmlidXRpb24uYm9ycm93KSB7XHJcbiAgICAgICAgICAgIC8vIElmIGJvcnJvd2VkIHZhbHVlID4gJDBcclxuICAgICAgICAgICAgaWYgKHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLmJvcnJvd1trZXldKSA+IDApIHtcclxuICAgICAgICAgICAgICAgIC8vIExvb3AgdGhyb3VnaCBDb21wb3VuZC1zdXBwb3J0ZWQgdG9rZW5zXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BzLmRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBTZWFyY2ggZm9yIG1hdGNoaW5nIHRva2VucyBhbmQgaW5jcmVtZW50IHZhbHVlc1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm9wcy5kYXRhW2ldLnN5bWJvbCA9PT0ga2V5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGludF9wYWlkICs9IHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLmJvcnJvd1trZXldKSAqIChwYXJzZUZsb2F0KHByb3BzLmRhdGFbaV0uYm9ycm93X2FweSkgLyAxMDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wX2Vhcm5lZCArPSAocGFyc2VGbG9hdChkaXN0cmlidXRpb24uYm9ycm93W2tleV0pIC8gcHJvcHMuZGF0YVtpXS5ncm9zc19ib3Jyb3cpICogcHJvcHMuZGF0YVtpXS5jb21wX2FsbG9jYXRpb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1bV9hbW91bnQgKz0gcGFyc2VGbG9hdChkaXN0cmlidXRpb24uYm9ycm93W2tleV0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gTmV0IGVhcm5pbmdzIGNhbGN1bGF0aW9uc1xyXG4gICAgICAgIGxldCBuZXRfZWFybmluZ3MgPSAoY29tcF9lYXJuZWQgKiBwcm9wcy5wcmljZSkgKyBpbnRfZWFybmVkIC0gaW50X3BhaWQ7XHJcblxyXG4gICAgICAgIC8vIFVwZGF0ZSBzdGF0ZSB3aXRoIGFwcHJvcHJpYXRlIGNhbGN1bGF0aW9uc1xyXG4gICAgICAgIHNldF9jb21wX2Vhcm5lZChOdW1iZXIoY29tcF9lYXJuZWQudG9GaXhlZCgyKSkpO1xyXG4gICAgICAgIHNldF9jb21wX2Vhcm5lZF91c2QoTnVtYmVyKChjb21wX2Vhcm5lZCAqIHByb3BzLnByaWNlKS50b0ZpeGVkKDIpKSk7XHJcbiAgICAgICAgc2V0X2ludGVyZXN0X2Vhcm5lZChOdW1iZXIoaW50X2Vhcm5lZC50b0ZpeGVkKDIpKSk7XHJcbiAgICAgICAgc2V0X2ludGVyZXN0X3BhaWQoTnVtYmVyKGludF9wYWlkLnRvRml4ZWQoMikpKTtcclxuICAgICAgICBzZXRfbmV0X2Vhcm5pbmdzKE51bWJlcihuZXRfZWFybmluZ3MudG9GaXhlZCgyKSkpO1xyXG4gICAgICAgIHNldF9uZXRfYXB5KCgobmV0X2Vhcm5pbmdzIC8gc3VtX2Ftb3VudCkgKiAxMDApLnRvRml4ZWQoMikpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJlYWN0LXRhYmxlIHNldHVwXHJcbiAgICBjb25zdCBjb2x1bW5zID0gW1xyXG4gICAgICAgIHtIZWFkZXI6ICdNYXJrZXQnLCBBY2Nlc3NvcjogJ2ltYWdlJywgQ2VsbDogcm93ID0+IDxNYXJrZXRJdGVtIHsuLi5yb3cub3JpZ2luYWx9IC8+fSxcclxuICAgICAgICB7SGVhZGVyOiAnR3Jvc3MgU3VwcGx5JywgQWNjZXNzb3I6ICdncm9zc19zdXBwbHknLCBDZWxsOiByb3cgPT4gPEZvcm1hdEl0ZW0gey4uLnJvdy5vcmlnaW5hbH0gdHlwZT1cInN1cHBseVwiIC8+fSxcclxuICAgICAgICB7SGVhZGVyOiAnU3VwcGx5IEFQWScsIEFjY2Vzc29yOiAnc3VwcGx5X2FweScsIENlbGw6IHJvdyA9PiA8Rm9ybWF0SXRlbUFQWSB7Li4ucm93Lm9yaWdpbmFsfSB0eXBlPVwic3VwcGx5XCIgLz59LFxyXG4gICAgICAgIHtIZWFkZXI6ICckIFN1cHBsaWVkJywgQWNjZXNzb3I6ICdncm9zc19zdXBwbHknLCBDZWxsOiByb3cgPT4gPENhbGNDZWxsIHsuLi5yb3cub3JpZ2luYWx9IHR5cGU9XCJzdXBwbHlcIiB1cGRhdGVEaXN0cmlidXRpb249e3VwZGF0ZURpc3RyaWJ1dGlvbn0gZGlzdHJpYnV0aW9uPXtkaXN0cmlidXRpb259Lz59LFxyXG4gICAgICAgIHtIZWFkZXI6ICdHcm9zcyBCb3Jyb3cnLCBBY2Nlc3NvcjogJ2dyb3NzX2JvcnJvdycsIENlbGw6IHJvdyA9PiA8Rm9ybWF0SXRlbSB7Li4ucm93Lm9yaWdpbmFsfSAvPn0sXHJcbiAgICAgICAge0hlYWRlcjogJ0JvcnJvdyBBUFknLCBBY2Nlc3NvcjogJ2JvcnJvd19hcHknLCBDZWxsOiByb3cgPT4gPEZvcm1hdEl0ZW1BUFkgey4uLnJvdy5vcmlnaW5hbH0gLz59LFxyXG4gICAgICAgIHtIZWFkZXI6ICckIEJvcnJvd2VkJywgQWNjZXNzb3I6ICdncm9zc19ib3Jyb3cnLCBDZWxsOiByb3cgPT4gPENhbGNDZWxsIHsuLi5yb3cub3JpZ2luYWx9IHVwZGF0ZURpc3RyaWJ1dGlvbj17dXBkYXRlRGlzdHJpYnV0aW9ufSBkaXN0cmlidXRpb249e2Rpc3RyaWJ1dGlvbn0gLz59LFxyXG4gICAgXTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxSZWFjdFRhYmxlXHJcbiAgICAgICAgICAgICAgICBkYXRhPXtwcm9wcy5kYXRhfVxyXG4gICAgICAgICAgICAgICAgY29sdW1ucz17Y29sdW1uc30gXHJcbiAgICAgICAgICAgICAgICBzaG93UGFnaW5hdGlvbj17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0UGFnZVNpemU9e3Byb3BzLmRhdGEubGVuZ3RofVxyXG4gICAgICAgICAgICAgICAgcmVzaXphYmxlPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbXAtdGFibGVcIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRva2VuLWRpc3RyaWJ1dGlvblwiPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4+Q2FsY3VsYXRlZCB0b2tlbiBkaXN0cmlidXRpb248L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgIDxiciAvPlxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImNvbXAtZWFybmVkXCI+Q09NUCBFYXJuZWQ8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cImNvbXAtZWFybmVkXCIgdmFsdWU9e2NvbXBfZWFybmVkLnRvTG9jYWxlU3RyaW5nKCl9IHBsYWNlaG9sZGVyPVwiMFwiIHJlYWRPbmx5Lz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImNvbXAtZWFybmVkLXVzZFwiPkNPTVAgRWFybmVkIChVU0QpPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9XCJjb21wLWVhcm5lZC11c2RcIiB2YWx1ZT17XCIkXCIgKyBjb21wX2Vhcm5lZF91c2QudG9Mb2NhbGVTdHJpbmcoKX0gcGxhY2Vob2xkZXI9XCIkMFwiIHJlYWRPbmx5Lz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImludGVyZXN0LWVhcm5lZFwiPkludGVyZXN0IEVhcm5lZDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPVwiaW50ZXJlc3QtZWFybmVkXCIgdmFsdWU9e1wiJFwiICsgaW50ZXJlc3RfZWFybmVkLnRvTG9jYWxlU3RyaW5nKCl9IHBsYWNlaG9sZGVyPVwiJDBcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJpbnRlcmVzdC1wYWlkXCI+SW50ZXJlc3QgUGFpZDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPVwiaW50ZXJlc3QtcGFpZFwiIHZhbHVlPXtcIiRcIiArIGludGVyZXN0X3BhaWQudG9Mb2NhbGVTdHJpbmcoKX0gcGxhY2Vob2xkZXI9XCIkMFwiIHJlYWRPbmx5Lz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cIm5ldC1lYXJuaW5nc1wiPk5ldCBFYXJuaW5nczwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPVwibmV0LWVhcm5pbmdzXCIgdmFsdWU9e1wiJFwiICsgbmV0X2Vhcm5pbmdzLnRvTG9jYWxlU3RyaW5nKCl9IHBsYWNlaG9sZGVyPVwiJDBcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJuZXQtYXB5XCI+TmV0IEFQWTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPVwibmV0LWFweVwiIHZhbHVlPXtpc05hTihuZXRfYXB5KSA/ICcwJScgOiBuZXRfYXB5LnRvTG9jYWxlU3RyaW5nKCkgKyBcIiVcIn0gcGxhY2Vob2xkZXI9XCIwJVwiIHJlYWRPbmx5Lz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPHN0eWxlIGdsb2JhbCBqc3g+e2BcclxuICAgICAgICAgICAgLnRva2VuLWRpc3RyaWJ1dGlvbiB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gODBweCk7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDIwcHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTQsIDIsIDQ0LCAwLjEpO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDIxNCwgMiwgNDQpO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC50b2tlbi1kaXN0cmlidXRpb24gPiBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnRva2VuLWRpc3RyaWJ1dGlvbiA+IGRpdiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnRva2VuLWRpc3RyaWJ1dGlvbiA+IGRpdiA+IGxhYmVsIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC50b2tlbi1kaXN0cmlidXRpb24gPiBkaXYgPiBpbnB1dCB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTYwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLi1oZWFkZXIge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlN2VhZjM7XHJcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLi1oZWFkZXIgPiAucnQtdHIge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogI0FBQjhDMTtcclxuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10Ym9keSwgLnJ0LXRoZWFkIHtcclxuICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMTA1NXB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLi1oZWFkZXIgPiAucnQtdHIgPiAucnQtdGg6bnRoLW9mLXR5cGUoMSkgPiBkaXYge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAyNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4tbG9hZGluZyB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4tZXZlbiB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkRGREZEO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10aCB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10aCwgLnJ0LXRkIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ZCB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSgxKSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDEpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyNzVweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSgyKSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSgzKSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDMpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnJ0LXRyID4gLnJ0LXRoOm50aC1vZi10eXBlKDQpLCAucnQtdHIgPiAucnQtdGQ6bnRoLW9mLXR5cGUoNCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDIwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnJ0LXRyID4gLnJ0LXRoOm50aC1vZi10eXBlKDUpLCAucnQtdHIgPiAucnQtdGQ6bnRoLW9mLXR5cGUoNSkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnJ0LXRyID4gLnJ0LXRoOm50aC1vZi10eXBlKDYpLCAucnQtdHIgPiAucnQtdGQ6bnRoLW9mLXR5cGUoNikge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDkwcHggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdHIgPiAucnQtdGg6bnRoLW9mLXR5cGUoNyksIC5ydC10ciA+IC5ydC10ZDpudGgtb2YtdHlwZSg3KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjAwcHggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdHIgPiAucnQtdGQge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jb21wLXRhYmxlIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuUmVhY3RUYWJsZSAucnQtdGJvZHkgLnJ0LXRyLWdyb3VwOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwwLDAsLjA1KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbi8vIE1hcmtldCBpbWFnZSArIHN5bWJvbCArIG5hbWUgY2VsbCBmb3JtYXR0aW5nXHJcbmZ1bmN0aW9uIE1hcmtldEl0ZW0ocHJvcHMpIHtcclxuICAgIHJldHVybihcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcmtldEl0ZW1cIj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3Byb3BzLmltYWdlfSBhbHQ9e2Ake3Byb3BzLnN5bWJvbH0gbG9nb2B9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3Byb3BzLm5hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIDxiciAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPntwcm9wcy5zeW1ib2x9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgIC5tYXJrZXRJdGVtIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNzBweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyNzBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSA+IGRpdiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXY6bnRoLWNoaWxkKDEpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA4MHB4O1xyXG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSA+IGRpdjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE5MHB4O1xyXG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSA+IGRpdiA+IGltZyB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDQzLjVweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0My41cHg7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxOC4yNXB4LCAxMy4yNXB4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSA+IGRpdiA+IHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDE5cHgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5tYXJrZXRJdGVtID4gZGl2ID4gc3BhbjpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSA+IGRpdiA+IHNwYW46bnRoLW9mLXR5cGUoMikge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNBQ0JCQzI7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvPlxyXG4gICAgKVxyXG59XHJcblxyXG4vLyBCb3Jyb3cvU3VwcGx5IGNlbGxzIGZvcm1hdHRpbmdcclxuZnVuY3Rpb24gRm9ybWF0SXRlbShwcm9wcykge1xyXG4gICAgcmV0dXJuKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybWF0LWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgIDxzcGFuPiR7cHJvcHMudHlwZSA9PT0gJ3N1cHBseScgPyBmb3JtYXROdW0ocHJvcHMuZ3Jvc3Nfc3VwcGx5KSA6IGZvcm1hdE51bShwcm9wcy5ncm9zc19ib3Jyb3cpfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDxiciAvPlxyXG4gICAgICAgICAgICAgICAge3Byb3BzLnR5cGUgPT09ICdzdXBwbHknID8gKFxyXG4gICAgICAgICAgICAgICAgICAgIHByb3BzLmdyb3NzX3N1cHBseV9jaGFuZ2UgPiAwID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtdXBcIj4re3Byb3BzLmdyb3NzX3N1cHBseV9jaGFuZ2UudG9GaXhlZCgyKX0lPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS1kb3duXCI+e3Byb3BzLmdyb3NzX3N1cHBseV9jaGFuZ2UudG9GaXhlZCgyKX0lPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuZ3Jvc3NfYm9ycm93X2NoYW5nZSA+IDAgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS11cFwiPit7cHJvcHMuZ3Jvc3NfYm9ycm93X2NoYW5nZS50b0ZpeGVkKDIpfSU8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2hhbmdlLWRvd25cIj57cHJvcHMuZ3Jvc3NfYm9ycm93X2NoYW5nZS50b0ZpeGVkKDIpfSU8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtIHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNzBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuZm9ybWF0LWl0ZW0gPiBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxOHB4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuZm9ybWF0LWl0ZW0gPiBzcGFuOm50aC1vZi10eXBlKDEpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmNoYW5nZS11cCB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDAsIDE5MCwgMCk7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmNoYW5nZS1kb3duIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiByZ2IoMjE0LCAyLCA0NCk7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPiBcclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5cclxuLy8gQVBZIGNlbGxzIGZvcm1hdHRpbmdcclxuZnVuY3Rpb24gRm9ybWF0SXRlbUFQWShwcm9wcykge1xyXG4gICAgcmV0dXJuKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybWF0LWl0ZW1cIj5cclxuICAgICAgICAgICAgICAgIDxzcGFuPntwcm9wcy50eXBlID09PSAnc3VwcGx5JyA/IHByb3BzLnN1cHBseV9hcHkgOiBwcm9wcy5ib3Jyb3dfYXB5fSU8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgIHtwcm9wcy50eXBlID09PSAnc3VwcGx5JyA/IChcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5zdXBwbHlfYXB5X2NoYW5nZSA+IDAgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS11cFwiPit7cHJvcHMuc3VwcGx5X2FweV9jaGFuZ2UudG9GaXhlZCgyKX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2hhbmdlLWRvd25cIj57cHJvcHMuc3VwcGx5X2FweV9jaGFuZ2UudG9GaXhlZCgyKX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5ib3Jyb3dfYXB5X2NoYW5nZSA+IDAgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS11cFwiPit7cHJvcHMuYm9ycm93X2FweV9jaGFuZ2UudG9GaXhlZCgyKX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2hhbmdlLWRvd25cIj57cHJvcHMuYm9ycm93X2FweV9jaGFuZ2UudG9GaXhlZCgyKX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtIHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNzBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuZm9ybWF0LWl0ZW0gPiBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxOHB4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuZm9ybWF0LWl0ZW0gPiBzcGFuOm50aC1vZi10eXBlKDEpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmNoYW5nZS11cCB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDAsIDE5MCwgMCk7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmNoYW5nZS1kb3duIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiByZ2IoMjE0LCAyLCA0NCk7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPiBcclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5cclxuLy8gRm9ybWF0cyBudW1iZXJzIHNpbWlsYXIgdG8gQ29tcG91bmQgZGFzaGJvYXJkIGxvb2tcclxuZnVuY3Rpb24gZm9ybWF0TnVtKHZhbHVlKSB7XHJcbiAgICAvLyBJZiB2YWx1ZSA+IGEgbWlsbGlvblxyXG4gICAgaWYgKHZhbHVlID4gMTAwMDAwMCkge1xyXG4gICAgICAgIC8vIENsZWFuZWQgbWlsbGlvbiBmb3JtYXR0aW5nXHJcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAvIDEwMDAwMDApLnRvRml4ZWQoMikgKyAnTSc7XHJcbiAgICB9IGVsc2UgaWYgKHZhbHVlID4gMTAwMCkge1xyXG4gICAgICAgIC8vIEVsc2UsIGNsZWFuZWQgdGhvdXNhbmRzIGZvcm1hdHRpbmdcclxuICAgICAgICByZXR1cm4gKHZhbHVlIC8gMTAwMCkudG9GaXhlZCgwKSArICdLJztcclxuICAgIH1cclxufVxyXG5cclxuLy8gSW5wdXQgY2VsbFxyXG5mdW5jdGlvbiBDYWxjQ2VsbChwcm9wcykge1xyXG4gICAgLy8gVXBkYXRlcyBhcnJheSBzdHJ1Y3R1cmUgb2YgcGFyZW50IHN0YXRlIHZpYSB1cGRhdGVEaXN0cmlidXRpb24gZnVuY3Rpb25cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZU51bSh2YWx1ZSkge1xyXG4gICAgICAgIHByb3BzLnVwZGF0ZURpc3RyaWJ1dGlvbihwcm9wcy50eXBlID09PSAnc3VwcGx5JyA/ICdzdXBwbHknIDogJ2JvcnJvdycsIHByb3BzLnN5bWJvbCwgcGFyc2VGbG9hdCh2YWx1ZSkpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYWxjXCI+XHJcbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cIm51bWJlclwiIHN0ZXA9XCJhbnlcIiB2YWx1ZT17cHJvcHMuZGlzdHJpYnV0aW9uW3Byb3BzLnR5cGUgPT09ICdzdXBwbHknID8gJ3N1cHBseScgOiAnYm9ycm93J11bcHJvcHMuc3ltYm9sXX0gcGxhY2Vob2xkZXI9e2Ake3Byb3BzLnN5bWJvbH0gKFVTRCkgdmFsdWVgfSBtaW49XCIwXCIgb25DaGFuZ2U9e2UgPT4gdXBkYXRlTnVtKGUudGFyZ2V0LnZhbHVlKX0gLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgLmNhbGMgPiBpbnB1dCB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTdlYWYzO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDIwcHgpO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvPlxyXG4gICAgKVxyXG59Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\COMPDistributionCalculator.js */\"));\n} // Borrow/Supply cells formatting\n\n\nfunction FormatItem(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-991934934\" + \" \" + \"format-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-991934934\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, \"$\", props.type === 'supply' ? formatNum(props.gross_supply) : formatNum(props.gross_borrow)), __jsx(\"br\", {\n    className: \"jsx-991934934\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }), props.type === 'supply' ? props.gross_supply_change > 0 ? __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 25\n    }\n  }, \"+\", props.gross_supply_change.toFixed(2), \"%\") : __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }, props.gross_supply_change.toFixed(2), \"%\") : props.gross_borrow_change > 0 ? __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, \"+\", props.gross_borrow_change.toFixed(2), \"%\") : __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 25\n    }\n  }, props.gross_borrow_change.toFixed(2), \"%\")), __jsx(_JSXStyle, {\n    id: \"991934934\",\n    __self: this\n  }, \".format-item.jsx-991934934{height:70px;}.format-item.jsx-991934934>span.jsx-991934934{display:inline-block;-webkit-transform:translateY(18px);-ms-transform:translateY(18px);transform:translateY(18px);}.format-item.jsx-991934934>span.jsx-991934934:nth-of-type(1){font-weight:500;}.change-up.jsx-991934934{color:rgb(0,190,0);font-size:14px;}.change-down.jsx-991934934{color:rgb(214,2,44);font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZnVyc29cXERlc2t0b3BcXHN0YXQuZmFybVxcY29tcG9uZW50c1xcQ09NUERpc3RyaWJ1dGlvbkNhbGN1bGF0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMlV3QixBQUc2QixBQUdTLEFBSUwsQUFHSyxBQUlDLFlBYjFCLElBT0EsR0FHbUIsQ0FJQSxDQVhZLGFBUS9CLENBSUEsK0VBWEEiLCJmaWxlIjoiQzpcXFVzZXJzXFxmdXJzb1xcRGVza3RvcFxcc3RhdC5mYXJtXFxjb21wb25lbnRzXFxDT01QRGlzdHJpYnV0aW9uQ2FsY3VsYXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdFRhYmxlIGZyb20gJ3JlYWN0LXRhYmxlLTYnIC8vIFJlYWN0LXRhYmxlXHJcbmltcG9ydCB7dXNlU3RhdGUsIHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnIC8vIFN0YXRlIHN0b3JhZ2UgZm9yIGNhbGN1bGF0aW9uc1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ09NUERpc3RyaWJ1dGlvbkNhbGN1bGF0b3IocHJvcHMpIHtcclxuICAgIC8vIEluaXRpYWxpemUgZGlzdHJpYnV0aW9uIGlucHV0IHN0YXRlIGhvbGRlclxyXG4gICAgY29uc3QgW2Rpc3RyaWJ1dGlvbiwgc2V0RGlzdHJpYnV0aW9uXSA9IHVzZVN0YXRlKHtcclxuICAgICAgICBcInN1cHBseVwiOiB7XHJcbiAgICAgICAgICAgICdEQUknOiAwLFxyXG4gICAgICAgICAgICAnVVNEQyc6IDAsXHJcbiAgICAgICAgICAgICdFVEgnOiAwLFxyXG4gICAgICAgICAgICAnVVNEVCc6IDAsXHJcbiAgICAgICAgICAgICdaUlgnOiAwLFxyXG4gICAgICAgICAgICAnUkVQJzogMCxcclxuICAgICAgICAgICAgJ0JBVCc6IDAsXHJcbiAgICAgICAgICAgICdXQlRDJzogMCxcclxuICAgICAgICAgICAgJ1NBSSc6IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIFwiYm9ycm93XCI6IHtcclxuICAgICAgICAgICAgJ0RBSSc6IDAsXHJcbiAgICAgICAgICAgICdVU0RDJzogMCxcclxuICAgICAgICAgICAgJ0VUSCc6IDAsXHJcbiAgICAgICAgICAgICdVU0RUJzogMCxcclxuICAgICAgICAgICAgJ1pSWCc6IDAsXHJcbiAgICAgICAgICAgICdSRVAnOiAwLFxyXG4gICAgICAgICAgICAnQkFUJzogMCxcclxuICAgICAgICAgICAgJ1dCVEMnOiAwLFxyXG4gICAgICAgICAgICAnU0FJJzogMFxyXG4gICAgICAgIH19KTtcclxuXHJcbiAgICAvLyBPbiBjaGFuZ2UgaW4gZGlzdHJpYnV0aW9uLCByZS1jYWxjdWxhdGUgdG9rZW4gZGlzdHJpYnV0aW9uXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4gY2FsY3VsYXRlVmFsdWVzKCksIFtkaXN0cmlidXRpb25dKTtcclxuXHJcbiAgICAvLyBTZXR1cCBob29rcyB0byBob2xkIGlucHV0IHZhbHVlcy5cclxuICAgIC8vIFRoaXMgY291bGQgaGF2ZSBiZWVuIG9uZSBpdGVtIGJ1dCB0aGlzIGlzIGVhc2llciB0byBtYW5hZ2UuXHJcbiAgICBjb25zdCBbaW50ZXJlc3RfZWFybmVkLCBzZXRfaW50ZXJlc3RfZWFybmVkXSA9IHVzZVN0YXRlKDApO1xyXG4gICAgY29uc3QgW2ludGVyZXN0X3BhaWQsIHNldF9pbnRlcmVzdF9wYWlkXSA9IHVzZVN0YXRlKDApO1xyXG4gICAgY29uc3QgW2NvbXBfZWFybmVkLCBzZXRfY29tcF9lYXJuZWRdID0gdXNlU3RhdGUoMCk7XHJcbiAgICBjb25zdCBbY29tcF9lYXJuZWRfdXNkLCBzZXRfY29tcF9lYXJuZWRfdXNkXSA9IHVzZVN0YXRlKDApO1xyXG4gICAgY29uc3QgW25ldF9lYXJuaW5ncywgc2V0X25ldF9lYXJuaW5nc10gPSB1c2VTdGF0ZSgwKTtcclxuICAgIGNvbnN0IFtuZXRfYXB5LCBzZXRfbmV0X2FweV0gPSB1c2VTdGF0ZSgwKTtcclxuXHJcbiAgICAvLyBVcGRhdGUgZGlzdHJpYnV0aW9uIGZ1bmN0aW9uXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVEaXN0cmlidXRpb24odHlwZSwgc3ltYm9sLCB2YWx1ZSkge1xyXG4gICAgICAgIGxldCBvcHBvc2l0ZSA9IHsuLi5kaXN0cmlidXRpb25bdHlwZSA9PT0gJ3N1cHBseScgPyAnYm9ycm93JyA6ICdzdXBwbHknXX07XHJcbiAgICAgICAgbGV0IGV4aXN0aW5nID0gey4uLmRpc3RyaWJ1dGlvblt0eXBlID09PSAnc3VwcGx5JyA/ICdzdXBwbHknIDogJ2JvcnJvdyddfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIE11dGF0ZSBvYmplY3QgZGVwZW5kaW5nIG9uIGlucHV0IGZpZWxkXHJcbiAgICAgICAgc2V0RGlzdHJpYnV0aW9uKHtcclxuICAgICAgICAgICAgW3R5cGUgPT09ICdzdXBwbHknID8gJ2JvcnJvdycgOiAnc3VwcGx5J106IHtcclxuICAgICAgICAgICAgICAgIC4uLm9wcG9zaXRlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFt0eXBlID09PSAnc3VwcGx5JyA/ICdzdXBwbHknIDogJ2JvcnJvdyddOiB7XHJcbiAgICAgICAgICAgICAgICAuLi5leGlzdGluZyxcclxuICAgICAgICAgICAgICAgIFtzeW1ib2xdOiBpc05hTih2YWx1ZSkgPyAwIDogdmFsdWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBDT01QIGRpc3RyaWJ1dGlvblxyXG4gICAgZnVuY3Rpb24gY2FsY3VsYXRlVmFsdWVzKCkge1xyXG4gICAgICAgIGxldCBjb21wX2Vhcm5lZCA9IDA7IC8vIFRvdGFsIENPTVAgRWFybmVkXHJcbiAgICAgICAgbGV0IGludF9lYXJuZWQgPSAwOyAvLyBFYXJuZWQgaW50ZXJlc3RcclxuICAgICAgICBsZXQgaW50X3BhaWQgPSAwOyAvLyBQYWlkIGludGVyZXN0XHJcbiAgICAgICAgbGV0IHN1bV9hbW91bnQgPSAwOyAvLyBTdW0gb2Ygc3VwcGxpZWQgb3IgYm9ycm93ZWRcclxuXHJcbiAgICAgICAgLy8gTG9vcCB0aHJvdWdoIHN1cHBsaWVkIHRva2Vuc1xyXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBkaXN0cmlidXRpb24uc3VwcGx5KSB7XHJcbiAgICAgICAgICAgIC8vIElmIHN1cHBsaWVkIHZhbHVlID4gJDBcclxuICAgICAgICAgICAgaWYgKHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLnN1cHBseVtrZXldKSA+IDApIHtcclxuICAgICAgICAgICAgICAgIC8vIExvb3AgdGhyb3VnaCBDb21wb3VuZC1zdXBwb3J0ZWQgdG9rZW5zXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BzLmRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBTZWFyY2ggZm9yIG1hdGNoaW5nIHRva2VuIGFuZCBpbmNyZW1lbnQgdmFsdWVzXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb3BzLmRhdGFbaV0uc3ltYm9sID09PSBrZXkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW50X2Vhcm5lZCArPSBwYXJzZUZsb2F0KGRpc3RyaWJ1dGlvbi5zdXBwbHlba2V5XSkgKiAocGFyc2VGbG9hdChwcm9wcy5kYXRhW2ldLnN1cHBseV9hcHkpIC8gMTAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29tcF9lYXJuZWQgKz0gKHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLnN1cHBseVtrZXldKSAvIHByb3BzLmRhdGFbaV0uZ3Jvc3Nfc3VwcGx5KSAqIHByb3BzLmRhdGFbaV0uY29tcF9hbGxvY2F0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdW1fYW1vdW50ICs9IHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLnN1cHBseVtrZXldKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIExvb3AgdGhyb3VnaCBib3Jyb3dlZCB0b2tlbnNcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGlzdHJpYnV0aW9uLmJvcnJvdykge1xyXG4gICAgICAgICAgICAvLyBJZiBib3Jyb3dlZCB2YWx1ZSA+ICQwXHJcbiAgICAgICAgICAgIGlmIChwYXJzZUZsb2F0KGRpc3RyaWJ1dGlvbi5ib3Jyb3dba2V5XSkgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBMb29wIHRocm91Z2ggQ29tcG91bmQtc3VwcG9ydGVkIHRva2Vuc1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9wcy5kYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhcmNoIGZvciBtYXRjaGluZyB0b2tlbnMgYW5kIGluY3JlbWVudCB2YWx1ZXNcclxuICAgICAgICAgICAgICAgICAgICBpZiAocHJvcHMuZGF0YVtpXS5zeW1ib2wgPT09IGtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRfcGFpZCArPSBwYXJzZUZsb2F0KGRpc3RyaWJ1dGlvbi5ib3Jyb3dba2V5XSkgKiAocGFyc2VGbG9hdChwcm9wcy5kYXRhW2ldLmJvcnJvd19hcHkpIC8gMTAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29tcF9lYXJuZWQgKz0gKHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLmJvcnJvd1trZXldKSAvIHByb3BzLmRhdGFbaV0uZ3Jvc3NfYm9ycm93KSAqIHByb3BzLmRhdGFbaV0uY29tcF9hbGxvY2F0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdW1fYW1vdW50ICs9IHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLmJvcnJvd1trZXldKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIE5ldCBlYXJuaW5ncyBjYWxjdWxhdGlvbnNcclxuICAgICAgICBsZXQgbmV0X2Vhcm5pbmdzID0gKGNvbXBfZWFybmVkICogcHJvcHMucHJpY2UpICsgaW50X2Vhcm5lZCAtIGludF9wYWlkO1xyXG5cclxuICAgICAgICAvLyBVcGRhdGUgc3RhdGUgd2l0aCBhcHByb3ByaWF0ZSBjYWxjdWxhdGlvbnNcclxuICAgICAgICBzZXRfY29tcF9lYXJuZWQoTnVtYmVyKGNvbXBfZWFybmVkLnRvRml4ZWQoMikpKTtcclxuICAgICAgICBzZXRfY29tcF9lYXJuZWRfdXNkKE51bWJlcigoY29tcF9lYXJuZWQgKiBwcm9wcy5wcmljZSkudG9GaXhlZCgyKSkpO1xyXG4gICAgICAgIHNldF9pbnRlcmVzdF9lYXJuZWQoTnVtYmVyKGludF9lYXJuZWQudG9GaXhlZCgyKSkpO1xyXG4gICAgICAgIHNldF9pbnRlcmVzdF9wYWlkKE51bWJlcihpbnRfcGFpZC50b0ZpeGVkKDIpKSk7XHJcbiAgICAgICAgc2V0X25ldF9lYXJuaW5ncyhOdW1iZXIobmV0X2Vhcm5pbmdzLnRvRml4ZWQoMikpKTtcclxuICAgICAgICBzZXRfbmV0X2FweSgoKG5ldF9lYXJuaW5ncyAvIHN1bV9hbW91bnQpICogMTAwKS50b0ZpeGVkKDIpKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZWFjdC10YWJsZSBzZXR1cFxyXG4gICAgY29uc3QgY29sdW1ucyA9IFtcclxuICAgICAgICB7SGVhZGVyOiAnTWFya2V0JywgQWNjZXNzb3I6ICdpbWFnZScsIENlbGw6IHJvdyA9PiA8TWFya2V0SXRlbSB7Li4ucm93Lm9yaWdpbmFsfSAvPn0sXHJcbiAgICAgICAge0hlYWRlcjogJ0dyb3NzIFN1cHBseScsIEFjY2Vzc29yOiAnZ3Jvc3Nfc3VwcGx5JywgQ2VsbDogcm93ID0+IDxGb3JtYXRJdGVtIHsuLi5yb3cub3JpZ2luYWx9IHR5cGU9XCJzdXBwbHlcIiAvPn0sXHJcbiAgICAgICAge0hlYWRlcjogJ1N1cHBseSBBUFknLCBBY2Nlc3NvcjogJ3N1cHBseV9hcHknLCBDZWxsOiByb3cgPT4gPEZvcm1hdEl0ZW1BUFkgey4uLnJvdy5vcmlnaW5hbH0gdHlwZT1cInN1cHBseVwiIC8+fSxcclxuICAgICAgICB7SGVhZGVyOiAnJCBTdXBwbGllZCcsIEFjY2Vzc29yOiAnZ3Jvc3Nfc3VwcGx5JywgQ2VsbDogcm93ID0+IDxDYWxjQ2VsbCB7Li4ucm93Lm9yaWdpbmFsfSB0eXBlPVwic3VwcGx5XCIgdXBkYXRlRGlzdHJpYnV0aW9uPXt1cGRhdGVEaXN0cmlidXRpb259IGRpc3RyaWJ1dGlvbj17ZGlzdHJpYnV0aW9ufS8+fSxcclxuICAgICAgICB7SGVhZGVyOiAnR3Jvc3MgQm9ycm93JywgQWNjZXNzb3I6ICdncm9zc19ib3Jyb3cnLCBDZWxsOiByb3cgPT4gPEZvcm1hdEl0ZW0gey4uLnJvdy5vcmlnaW5hbH0gLz59LFxyXG4gICAgICAgIHtIZWFkZXI6ICdCb3Jyb3cgQVBZJywgQWNjZXNzb3I6ICdib3Jyb3dfYXB5JywgQ2VsbDogcm93ID0+IDxGb3JtYXRJdGVtQVBZIHsuLi5yb3cub3JpZ2luYWx9IC8+fSxcclxuICAgICAgICB7SGVhZGVyOiAnJCBCb3Jyb3dlZCcsIEFjY2Vzc29yOiAnZ3Jvc3NfYm9ycm93JywgQ2VsbDogcm93ID0+IDxDYWxjQ2VsbCB7Li4ucm93Lm9yaWdpbmFsfSB1cGRhdGVEaXN0cmlidXRpb249e3VwZGF0ZURpc3RyaWJ1dGlvbn0gZGlzdHJpYnV0aW9uPXtkaXN0cmlidXRpb259IC8+fSxcclxuICAgIF07XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8UmVhY3RUYWJsZVxyXG4gICAgICAgICAgICAgICAgZGF0YT17cHJvcHMuZGF0YX1cclxuICAgICAgICAgICAgICAgIGNvbHVtbnM9e2NvbHVtbnN9IFxyXG4gICAgICAgICAgICAgICAgc2hvd1BhZ2luYXRpb249e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdFBhZ2VTaXplPXtwcm9wcy5kYXRhLmxlbmd0aH1cclxuICAgICAgICAgICAgICAgIHJlc2l6YWJsZT17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjb21wLXRhYmxlXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b2tlbi1kaXN0cmlidXRpb25cIj5cclxuICAgICAgICAgICAgICAgIDxzcGFuPkNhbGN1bGF0ZWQgdG9rZW4gZGlzdHJpYnV0aW9uPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJjb21wLWVhcm5lZFwiPkNPTVAgRWFybmVkPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9XCJjb21wLWVhcm5lZFwiIHZhbHVlPXtjb21wX2Vhcm5lZC50b0xvY2FsZVN0cmluZygpfSBwbGFjZWhvbGRlcj1cIjBcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJjb21wLWVhcm5lZC11c2RcIj5DT01QIEVhcm5lZCAoVVNEKTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPVwiY29tcC1lYXJuZWQtdXNkXCIgdmFsdWU9e1wiJFwiICsgY29tcF9lYXJuZWRfdXNkLnRvTG9jYWxlU3RyaW5nKCl9IHBsYWNlaG9sZGVyPVwiJDBcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJpbnRlcmVzdC1lYXJuZWRcIj5JbnRlcmVzdCBFYXJuZWQ8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cImludGVyZXN0LWVhcm5lZFwiIHZhbHVlPXtcIiRcIiArIGludGVyZXN0X2Vhcm5lZC50b0xvY2FsZVN0cmluZygpfSBwbGFjZWhvbGRlcj1cIiQwXCIgcmVhZE9ubHkvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiaW50ZXJlc3QtcGFpZFwiPkludGVyZXN0IFBhaWQ8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cImludGVyZXN0LXBhaWRcIiB2YWx1ZT17XCIkXCIgKyBpbnRlcmVzdF9wYWlkLnRvTG9jYWxlU3RyaW5nKCl9IHBsYWNlaG9sZGVyPVwiJDBcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJuZXQtZWFybmluZ3NcIj5OZXQgRWFybmluZ3M8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cIm5ldC1lYXJuaW5nc1wiIHZhbHVlPXtcIiRcIiArIG5ldF9lYXJuaW5ncy50b0xvY2FsZVN0cmluZygpfSBwbGFjZWhvbGRlcj1cIiQwXCIgcmVhZE9ubHkvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwibmV0LWFweVwiPk5ldCBBUFk8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cIm5ldC1hcHlcIiB2YWx1ZT17aXNOYU4obmV0X2FweSkgPyAnMCUnIDogbmV0X2FweS50b0xvY2FsZVN0cmluZygpICsgXCIlXCJ9IHBsYWNlaG9sZGVyPVwiMCVcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxzdHlsZSBnbG9iYWwganN4PntgXHJcbiAgICAgICAgICAgIC50b2tlbi1kaXN0cmlidXRpb24ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDgwcHgpO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjE0LCAyLCA0NCwgMC4xKTtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMTQsIDIsIDQ0KTtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAudG9rZW4tZGlzdHJpYnV0aW9uID4gc3BhbiB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC50b2tlbi1kaXN0cmlidXRpb24gPiBkaXYge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC50b2tlbi1kaXN0cmlidXRpb24gPiBkaXYgPiBsYWJlbCB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAudG9rZW4tZGlzdHJpYnV0aW9uID4gZGl2ID4gaW5wdXQge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE2MHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4taGVhZGVyIHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTdlYWYzO1xyXG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4taGVhZGVyID4gLnJ0LXRyIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNBQUI4QzE7XHJcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdGJvZHksIC5ydC10aGVhZCB7XHJcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDEwNTVweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4taGVhZGVyID4gLnJ0LXRyID4gLnJ0LXRoOm50aC1vZi10eXBlKDEpID4gZGl2IHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMjVweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuLWxvYWRpbmcge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuLWV2ZW4ge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZERkRGRDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdGgge1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdGgsIC5ydC10ZCB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdGQge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdHIgPiAucnQtdGg6bnRoLW9mLXR5cGUoMSksIC5ydC10ciA+IC5ydC10ZDpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjc1cHggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdHIgPiAucnQtdGg6bnRoLW9mLXR5cGUoMiksIC5ydC10ciA+IC5ydC10ZDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdHIgPiAucnQtdGg6bnRoLW9mLXR5cGUoMyksIC5ydC10ciA+IC5ydC10ZDpudGgtb2YtdHlwZSgzKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSg0KSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDQpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyMDBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSg1KSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDUpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSg2KSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDYpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnJ0LXRyID4gLnJ0LXRoOm50aC1vZi10eXBlKDcpLCAucnQtdHIgPiAucnQtdGQ6bnRoLW9mLXR5cGUoNykge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDIwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnJ0LXRyID4gLnJ0LXRkIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuY29tcC10YWJsZSB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLlJlYWN0VGFibGUgLnJ0LXRib2R5IC5ydC10ci1ncm91cDpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsMCwwLC4wNSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvPlxyXG4gICAgKVxyXG59XHJcblxyXG4vLyBNYXJrZXQgaW1hZ2UgKyBzeW1ib2wgKyBuYW1lIGNlbGwgZm9ybWF0dGluZ1xyXG5mdW5jdGlvbiBNYXJrZXRJdGVtKHByb3BzKSB7XHJcbiAgICByZXR1cm4oXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXJrZXRJdGVtXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtwcm9wcy5pbWFnZX0gYWx0PXtgJHtwcm9wcy5zeW1ib2x9IGxvZ29gfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPntwcm9wcy5uYW1lfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj57cHJvcHMuc3ltYm9sfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjcwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXYge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5tYXJrZXRJdGVtID4gZGl2Om50aC1jaGlsZCgxKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODBweDtcclxuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxOTBweDtcclxuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXYgPiBpbWcge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0My41cHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNDMuNXB4O1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTguMjVweCwgMTMuMjVweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXYgPiBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxOXB4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSA+IGRpdiA+IHNwYW46bnRoLW9mLXR5cGUoMSkge1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXYgPiBzcGFuOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjQUNCQkMyO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5cclxuLy8gQm9ycm93L1N1cHBseSBjZWxscyBmb3JtYXR0aW5nXHJcbmZ1bmN0aW9uIEZvcm1hdEl0ZW0ocHJvcHMpIHtcclxuICAgIHJldHVybihcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm1hdC1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICA8c3Bhbj4ke3Byb3BzLnR5cGUgPT09ICdzdXBwbHknID8gZm9ybWF0TnVtKHByb3BzLmdyb3NzX3N1cHBseSkgOiBmb3JtYXROdW0ocHJvcHMuZ3Jvc3NfYm9ycm93KX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgIHtwcm9wcy50eXBlID09PSAnc3VwcGx5JyA/IChcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5ncm9zc19zdXBwbHlfY2hhbmdlID4gMCA/IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2hhbmdlLXVwXCI+K3twcm9wcy5ncm9zc19zdXBwbHlfY2hhbmdlLnRvRml4ZWQoMil9JTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtZG93blwiPntwcm9wcy5ncm9zc19zdXBwbHlfY2hhbmdlLnRvRml4ZWQoMil9JTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICAgICAgICAgIHByb3BzLmdyb3NzX2JvcnJvd19jaGFuZ2UgPiAwID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtdXBcIj4re3Byb3BzLmdyb3NzX2JvcnJvd19jaGFuZ2UudG9GaXhlZCgyKX0lPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS1kb3duXCI+e3Byb3BzLmdyb3NzX2JvcnJvd19jaGFuZ2UudG9GaXhlZCgyKX0lPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgIC5mb3JtYXQtaXRlbSB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtID4gc3BhbiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMThweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtID4gc3BhbjpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jaGFuZ2UtdXAge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHJnYigwLCAxOTAsIDApO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jaGFuZ2UtZG93biB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDIxNCwgMiwgNDQpO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT4gXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbi8vIEFQWSBjZWxscyBmb3JtYXR0aW5nXHJcbmZ1bmN0aW9uIEZvcm1hdEl0ZW1BUFkocHJvcHMpIHtcclxuICAgIHJldHVybihcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm1hdC1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICA8c3Bhbj57cHJvcHMudHlwZSA9PT0gJ3N1cHBseScgPyBwcm9wcy5zdXBwbHlfYXB5IDogcHJvcHMuYm9ycm93X2FweX0lPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgICB7cHJvcHMudHlwZSA9PT0gJ3N1cHBseScgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuc3VwcGx5X2FweV9jaGFuZ2UgPiAwID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtdXBcIj4re3Byb3BzLnN1cHBseV9hcHlfY2hhbmdlLnRvRml4ZWQoMil9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS1kb3duXCI+e3Byb3BzLnN1cHBseV9hcHlfY2hhbmdlLnRvRml4ZWQoMil9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuYm9ycm93X2FweV9jaGFuZ2UgPiAwID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtdXBcIj4re3Byb3BzLmJvcnJvd19hcHlfY2hhbmdlLnRvRml4ZWQoMil9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS1kb3duXCI+e3Byb3BzLmJvcnJvd19hcHlfY2hhbmdlLnRvRml4ZWQoMil9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgIC5mb3JtYXQtaXRlbSB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtID4gc3BhbiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMThweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtID4gc3BhbjpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jaGFuZ2UtdXAge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHJnYigwLCAxOTAsIDApO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jaGFuZ2UtZG93biB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDIxNCwgMiwgNDQpO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT4gXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbi8vIEZvcm1hdHMgbnVtYmVycyBzaW1pbGFyIHRvIENvbXBvdW5kIGRhc2hib2FyZCBsb29rXHJcbmZ1bmN0aW9uIGZvcm1hdE51bSh2YWx1ZSkge1xyXG4gICAgLy8gSWYgdmFsdWUgPiBhIG1pbGxpb25cclxuICAgIGlmICh2YWx1ZSA+IDEwMDAwMDApIHtcclxuICAgICAgICAvLyBDbGVhbmVkIG1pbGxpb24gZm9ybWF0dGluZ1xyXG4gICAgICAgIHJldHVybiAodmFsdWUgLyAxMDAwMDAwKS50b0ZpeGVkKDIpICsgJ00nO1xyXG4gICAgfSBlbHNlIGlmICh2YWx1ZSA+IDEwMDApIHtcclxuICAgICAgICAvLyBFbHNlLCBjbGVhbmVkIHRob3VzYW5kcyBmb3JtYXR0aW5nXHJcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAvIDEwMDApLnRvRml4ZWQoMCkgKyAnSyc7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIElucHV0IGNlbGxcclxuZnVuY3Rpb24gQ2FsY0NlbGwocHJvcHMpIHtcclxuICAgIC8vIFVwZGF0ZXMgYXJyYXkgc3RydWN0dXJlIG9mIHBhcmVudCBzdGF0ZSB2aWEgdXBkYXRlRGlzdHJpYnV0aW9uIGZ1bmN0aW9uXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVOdW0odmFsdWUpIHtcclxuICAgICAgICBwcm9wcy51cGRhdGVEaXN0cmlidXRpb24ocHJvcHMudHlwZSA9PT0gJ3N1cHBseScgPyAnc3VwcGx5JyA6ICdib3Jyb3cnLCBwcm9wcy5zeW1ib2wsIHBhcnNlRmxvYXQodmFsdWUpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FsY1wiPlxyXG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBzdGVwPVwiYW55XCIgdmFsdWU9e3Byb3BzLmRpc3RyaWJ1dGlvbltwcm9wcy50eXBlID09PSAnc3VwcGx5JyA/ICdzdXBwbHknIDogJ2JvcnJvdyddW3Byb3BzLnN5bWJvbF19IHBsYWNlaG9sZGVyPXtgJHtwcm9wcy5zeW1ib2x9IChVU0QpIHZhbHVlYH0gbWluPVwiMFwiIG9uQ2hhbmdlPXtlID0+IHVwZGF0ZU51bShlLnRhcmdldC52YWx1ZSl9IC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgIC5jYWxjID4gaW5wdXQge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U3ZWFmMztcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufSJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\COMPDistributionCalculator.js */\"));\n} // APY cells formatting\n\n\nfunction FormatItemAPY(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-991934934\" + \" \" + \"format-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-991934934\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, props.type === 'supply' ? props.supply_apy : props.borrow_apy, \"%\"), __jsx(\"br\", {\n    className: \"jsx-991934934\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }), props.type === 'supply' ? props.supply_apy_change > 0 ? __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 25\n    }\n  }, \"+\", props.supply_apy_change.toFixed(2)) : __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }, props.supply_apy_change.toFixed(2)) : props.borrow_apy_change > 0 ? __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, \"+\", props.borrow_apy_change.toFixed(2)) : __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 25\n    }\n  }, props.borrow_apy_change.toFixed(2))), __jsx(_JSXStyle, {\n    id: \"991934934\",\n    __self: this\n  }, \".format-item.jsx-991934934{height:70px;}.format-item.jsx-991934934>span.jsx-991934934{display:inline-block;-webkit-transform:translateY(18px);-ms-transform:translateY(18px);transform:translateY(18px);}.format-item.jsx-991934934>span.jsx-991934934:nth-of-type(1){font-weight:500;}.change-up.jsx-991934934{color:rgb(0,190,0);font-size:14px;}.change-down.jsx-991934934{color:rgb(214,2,44);font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZnVyc29cXERlc2t0b3BcXHN0YXQuZmFybVxcY29tcG9uZW50c1xcQ09NUERpc3RyaWJ1dGlvbkNhbGN1bGF0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd1h3QixBQUc2QixBQUdTLEFBSUwsQUFHSyxBQUlDLFlBYjFCLElBT0EsR0FHbUIsQ0FJQSxDQVhZLGFBUS9CLENBSUEsK0VBWEEiLCJmaWxlIjoiQzpcXFVzZXJzXFxmdXJzb1xcRGVza3RvcFxcc3RhdC5mYXJtXFxjb21wb25lbnRzXFxDT01QRGlzdHJpYnV0aW9uQ2FsY3VsYXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdFRhYmxlIGZyb20gJ3JlYWN0LXRhYmxlLTYnIC8vIFJlYWN0LXRhYmxlXHJcbmltcG9ydCB7dXNlU3RhdGUsIHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnIC8vIFN0YXRlIHN0b3JhZ2UgZm9yIGNhbGN1bGF0aW9uc1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ09NUERpc3RyaWJ1dGlvbkNhbGN1bGF0b3IocHJvcHMpIHtcclxuICAgIC8vIEluaXRpYWxpemUgZGlzdHJpYnV0aW9uIGlucHV0IHN0YXRlIGhvbGRlclxyXG4gICAgY29uc3QgW2Rpc3RyaWJ1dGlvbiwgc2V0RGlzdHJpYnV0aW9uXSA9IHVzZVN0YXRlKHtcclxuICAgICAgICBcInN1cHBseVwiOiB7XHJcbiAgICAgICAgICAgICdEQUknOiAwLFxyXG4gICAgICAgICAgICAnVVNEQyc6IDAsXHJcbiAgICAgICAgICAgICdFVEgnOiAwLFxyXG4gICAgICAgICAgICAnVVNEVCc6IDAsXHJcbiAgICAgICAgICAgICdaUlgnOiAwLFxyXG4gICAgICAgICAgICAnUkVQJzogMCxcclxuICAgICAgICAgICAgJ0JBVCc6IDAsXHJcbiAgICAgICAgICAgICdXQlRDJzogMCxcclxuICAgICAgICAgICAgJ1NBSSc6IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIFwiYm9ycm93XCI6IHtcclxuICAgICAgICAgICAgJ0RBSSc6IDAsXHJcbiAgICAgICAgICAgICdVU0RDJzogMCxcclxuICAgICAgICAgICAgJ0VUSCc6IDAsXHJcbiAgICAgICAgICAgICdVU0RUJzogMCxcclxuICAgICAgICAgICAgJ1pSWCc6IDAsXHJcbiAgICAgICAgICAgICdSRVAnOiAwLFxyXG4gICAgICAgICAgICAnQkFUJzogMCxcclxuICAgICAgICAgICAgJ1dCVEMnOiAwLFxyXG4gICAgICAgICAgICAnU0FJJzogMFxyXG4gICAgICAgIH19KTtcclxuXHJcbiAgICAvLyBPbiBjaGFuZ2UgaW4gZGlzdHJpYnV0aW9uLCByZS1jYWxjdWxhdGUgdG9rZW4gZGlzdHJpYnV0aW9uXHJcbiAgICB1c2VFZmZlY3QoKCkgPT4gY2FsY3VsYXRlVmFsdWVzKCksIFtkaXN0cmlidXRpb25dKTtcclxuXHJcbiAgICAvLyBTZXR1cCBob29rcyB0byBob2xkIGlucHV0IHZhbHVlcy5cclxuICAgIC8vIFRoaXMgY291bGQgaGF2ZSBiZWVuIG9uZSBpdGVtIGJ1dCB0aGlzIGlzIGVhc2llciB0byBtYW5hZ2UuXHJcbiAgICBjb25zdCBbaW50ZXJlc3RfZWFybmVkLCBzZXRfaW50ZXJlc3RfZWFybmVkXSA9IHVzZVN0YXRlKDApO1xyXG4gICAgY29uc3QgW2ludGVyZXN0X3BhaWQsIHNldF9pbnRlcmVzdF9wYWlkXSA9IHVzZVN0YXRlKDApO1xyXG4gICAgY29uc3QgW2NvbXBfZWFybmVkLCBzZXRfY29tcF9lYXJuZWRdID0gdXNlU3RhdGUoMCk7XHJcbiAgICBjb25zdCBbY29tcF9lYXJuZWRfdXNkLCBzZXRfY29tcF9lYXJuZWRfdXNkXSA9IHVzZVN0YXRlKDApO1xyXG4gICAgY29uc3QgW25ldF9lYXJuaW5ncywgc2V0X25ldF9lYXJuaW5nc10gPSB1c2VTdGF0ZSgwKTtcclxuICAgIGNvbnN0IFtuZXRfYXB5LCBzZXRfbmV0X2FweV0gPSB1c2VTdGF0ZSgwKTtcclxuXHJcbiAgICAvLyBVcGRhdGUgZGlzdHJpYnV0aW9uIGZ1bmN0aW9uXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVEaXN0cmlidXRpb24odHlwZSwgc3ltYm9sLCB2YWx1ZSkge1xyXG4gICAgICAgIGxldCBvcHBvc2l0ZSA9IHsuLi5kaXN0cmlidXRpb25bdHlwZSA9PT0gJ3N1cHBseScgPyAnYm9ycm93JyA6ICdzdXBwbHknXX07XHJcbiAgICAgICAgbGV0IGV4aXN0aW5nID0gey4uLmRpc3RyaWJ1dGlvblt0eXBlID09PSAnc3VwcGx5JyA/ICdzdXBwbHknIDogJ2JvcnJvdyddfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIE11dGF0ZSBvYmplY3QgZGVwZW5kaW5nIG9uIGlucHV0IGZpZWxkXHJcbiAgICAgICAgc2V0RGlzdHJpYnV0aW9uKHtcclxuICAgICAgICAgICAgW3R5cGUgPT09ICdzdXBwbHknID8gJ2JvcnJvdycgOiAnc3VwcGx5J106IHtcclxuICAgICAgICAgICAgICAgIC4uLm9wcG9zaXRlXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFt0eXBlID09PSAnc3VwcGx5JyA/ICdzdXBwbHknIDogJ2JvcnJvdyddOiB7XHJcbiAgICAgICAgICAgICAgICAuLi5leGlzdGluZyxcclxuICAgICAgICAgICAgICAgIFtzeW1ib2xdOiBpc05hTih2YWx1ZSkgPyAwIDogdmFsdWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBDT01QIGRpc3RyaWJ1dGlvblxyXG4gICAgZnVuY3Rpb24gY2FsY3VsYXRlVmFsdWVzKCkge1xyXG4gICAgICAgIGxldCBjb21wX2Vhcm5lZCA9IDA7IC8vIFRvdGFsIENPTVAgRWFybmVkXHJcbiAgICAgICAgbGV0IGludF9lYXJuZWQgPSAwOyAvLyBFYXJuZWQgaW50ZXJlc3RcclxuICAgICAgICBsZXQgaW50X3BhaWQgPSAwOyAvLyBQYWlkIGludGVyZXN0XHJcbiAgICAgICAgbGV0IHN1bV9hbW91bnQgPSAwOyAvLyBTdW0gb2Ygc3VwcGxpZWQgb3IgYm9ycm93ZWRcclxuXHJcbiAgICAgICAgLy8gTG9vcCB0aHJvdWdoIHN1cHBsaWVkIHRva2Vuc1xyXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBkaXN0cmlidXRpb24uc3VwcGx5KSB7XHJcbiAgICAgICAgICAgIC8vIElmIHN1cHBsaWVkIHZhbHVlID4gJDBcclxuICAgICAgICAgICAgaWYgKHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLnN1cHBseVtrZXldKSA+IDApIHtcclxuICAgICAgICAgICAgICAgIC8vIExvb3AgdGhyb3VnaCBDb21wb3VuZC1zdXBwb3J0ZWQgdG9rZW5zXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BzLmRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBTZWFyY2ggZm9yIG1hdGNoaW5nIHRva2VuIGFuZCBpbmNyZW1lbnQgdmFsdWVzXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb3BzLmRhdGFbaV0uc3ltYm9sID09PSBrZXkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW50X2Vhcm5lZCArPSBwYXJzZUZsb2F0KGRpc3RyaWJ1dGlvbi5zdXBwbHlba2V5XSkgKiAocGFyc2VGbG9hdChwcm9wcy5kYXRhW2ldLnN1cHBseV9hcHkpIC8gMTAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29tcF9lYXJuZWQgKz0gKHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLnN1cHBseVtrZXldKSAvIHByb3BzLmRhdGFbaV0uZ3Jvc3Nfc3VwcGx5KSAqIHByb3BzLmRhdGFbaV0uY29tcF9hbGxvY2F0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdW1fYW1vdW50ICs9IHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLnN1cHBseVtrZXldKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIExvb3AgdGhyb3VnaCBib3Jyb3dlZCB0b2tlbnNcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGlzdHJpYnV0aW9uLmJvcnJvdykge1xyXG4gICAgICAgICAgICAvLyBJZiBib3Jyb3dlZCB2YWx1ZSA+ICQwXHJcbiAgICAgICAgICAgIGlmIChwYXJzZUZsb2F0KGRpc3RyaWJ1dGlvbi5ib3Jyb3dba2V5XSkgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBMb29wIHRocm91Z2ggQ29tcG91bmQtc3VwcG9ydGVkIHRva2Vuc1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9wcy5kYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhcmNoIGZvciBtYXRjaGluZyB0b2tlbnMgYW5kIGluY3JlbWVudCB2YWx1ZXNcclxuICAgICAgICAgICAgICAgICAgICBpZiAocHJvcHMuZGF0YVtpXS5zeW1ib2wgPT09IGtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRfcGFpZCArPSBwYXJzZUZsb2F0KGRpc3RyaWJ1dGlvbi5ib3Jyb3dba2V5XSkgKiAocGFyc2VGbG9hdChwcm9wcy5kYXRhW2ldLmJvcnJvd19hcHkpIC8gMTAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29tcF9lYXJuZWQgKz0gKHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLmJvcnJvd1trZXldKSAvIHByb3BzLmRhdGFbaV0uZ3Jvc3NfYm9ycm93KSAqIHByb3BzLmRhdGFbaV0uY29tcF9hbGxvY2F0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdW1fYW1vdW50ICs9IHBhcnNlRmxvYXQoZGlzdHJpYnV0aW9uLmJvcnJvd1trZXldKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIE5ldCBlYXJuaW5ncyBjYWxjdWxhdGlvbnNcclxuICAgICAgICBsZXQgbmV0X2Vhcm5pbmdzID0gKGNvbXBfZWFybmVkICogcHJvcHMucHJpY2UpICsgaW50X2Vhcm5lZCAtIGludF9wYWlkO1xyXG5cclxuICAgICAgICAvLyBVcGRhdGUgc3RhdGUgd2l0aCBhcHByb3ByaWF0ZSBjYWxjdWxhdGlvbnNcclxuICAgICAgICBzZXRfY29tcF9lYXJuZWQoTnVtYmVyKGNvbXBfZWFybmVkLnRvRml4ZWQoMikpKTtcclxuICAgICAgICBzZXRfY29tcF9lYXJuZWRfdXNkKE51bWJlcigoY29tcF9lYXJuZWQgKiBwcm9wcy5wcmljZSkudG9GaXhlZCgyKSkpO1xyXG4gICAgICAgIHNldF9pbnRlcmVzdF9lYXJuZWQoTnVtYmVyKGludF9lYXJuZWQudG9GaXhlZCgyKSkpO1xyXG4gICAgICAgIHNldF9pbnRlcmVzdF9wYWlkKE51bWJlcihpbnRfcGFpZC50b0ZpeGVkKDIpKSk7XHJcbiAgICAgICAgc2V0X25ldF9lYXJuaW5ncyhOdW1iZXIobmV0X2Vhcm5pbmdzLnRvRml4ZWQoMikpKTtcclxuICAgICAgICBzZXRfbmV0X2FweSgoKG5ldF9lYXJuaW5ncyAvIHN1bV9hbW91bnQpICogMTAwKS50b0ZpeGVkKDIpKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZWFjdC10YWJsZSBzZXR1cFxyXG4gICAgY29uc3QgY29sdW1ucyA9IFtcclxuICAgICAgICB7SGVhZGVyOiAnTWFya2V0JywgQWNjZXNzb3I6ICdpbWFnZScsIENlbGw6IHJvdyA9PiA8TWFya2V0SXRlbSB7Li4ucm93Lm9yaWdpbmFsfSAvPn0sXHJcbiAgICAgICAge0hlYWRlcjogJ0dyb3NzIFN1cHBseScsIEFjY2Vzc29yOiAnZ3Jvc3Nfc3VwcGx5JywgQ2VsbDogcm93ID0+IDxGb3JtYXRJdGVtIHsuLi5yb3cub3JpZ2luYWx9IHR5cGU9XCJzdXBwbHlcIiAvPn0sXHJcbiAgICAgICAge0hlYWRlcjogJ1N1cHBseSBBUFknLCBBY2Nlc3NvcjogJ3N1cHBseV9hcHknLCBDZWxsOiByb3cgPT4gPEZvcm1hdEl0ZW1BUFkgey4uLnJvdy5vcmlnaW5hbH0gdHlwZT1cInN1cHBseVwiIC8+fSxcclxuICAgICAgICB7SGVhZGVyOiAnJCBTdXBwbGllZCcsIEFjY2Vzc29yOiAnZ3Jvc3Nfc3VwcGx5JywgQ2VsbDogcm93ID0+IDxDYWxjQ2VsbCB7Li4ucm93Lm9yaWdpbmFsfSB0eXBlPVwic3VwcGx5XCIgdXBkYXRlRGlzdHJpYnV0aW9uPXt1cGRhdGVEaXN0cmlidXRpb259IGRpc3RyaWJ1dGlvbj17ZGlzdHJpYnV0aW9ufS8+fSxcclxuICAgICAgICB7SGVhZGVyOiAnR3Jvc3MgQm9ycm93JywgQWNjZXNzb3I6ICdncm9zc19ib3Jyb3cnLCBDZWxsOiByb3cgPT4gPEZvcm1hdEl0ZW0gey4uLnJvdy5vcmlnaW5hbH0gLz59LFxyXG4gICAgICAgIHtIZWFkZXI6ICdCb3Jyb3cgQVBZJywgQWNjZXNzb3I6ICdib3Jyb3dfYXB5JywgQ2VsbDogcm93ID0+IDxGb3JtYXRJdGVtQVBZIHsuLi5yb3cub3JpZ2luYWx9IC8+fSxcclxuICAgICAgICB7SGVhZGVyOiAnJCBCb3Jyb3dlZCcsIEFjY2Vzc29yOiAnZ3Jvc3NfYm9ycm93JywgQ2VsbDogcm93ID0+IDxDYWxjQ2VsbCB7Li4ucm93Lm9yaWdpbmFsfSB1cGRhdGVEaXN0cmlidXRpb249e3VwZGF0ZURpc3RyaWJ1dGlvbn0gZGlzdHJpYnV0aW9uPXtkaXN0cmlidXRpb259IC8+fSxcclxuICAgIF07XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8UmVhY3RUYWJsZVxyXG4gICAgICAgICAgICAgICAgZGF0YT17cHJvcHMuZGF0YX1cclxuICAgICAgICAgICAgICAgIGNvbHVtbnM9e2NvbHVtbnN9IFxyXG4gICAgICAgICAgICAgICAgc2hvd1BhZ2luYXRpb249e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdFBhZ2VTaXplPXtwcm9wcy5kYXRhLmxlbmd0aH1cclxuICAgICAgICAgICAgICAgIHJlc2l6YWJsZT17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjb21wLXRhYmxlXCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b2tlbi1kaXN0cmlidXRpb25cIj5cclxuICAgICAgICAgICAgICAgIDxzcGFuPkNhbGN1bGF0ZWQgdG9rZW4gZGlzdHJpYnV0aW9uPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJjb21wLWVhcm5lZFwiPkNPTVAgRWFybmVkPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9XCJjb21wLWVhcm5lZFwiIHZhbHVlPXtjb21wX2Vhcm5lZC50b0xvY2FsZVN0cmluZygpfSBwbGFjZWhvbGRlcj1cIjBcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJjb21wLWVhcm5lZC11c2RcIj5DT01QIEVhcm5lZCAoVVNEKTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPVwiY29tcC1lYXJuZWQtdXNkXCIgdmFsdWU9e1wiJFwiICsgY29tcF9lYXJuZWRfdXNkLnRvTG9jYWxlU3RyaW5nKCl9IHBsYWNlaG9sZGVyPVwiJDBcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJpbnRlcmVzdC1lYXJuZWRcIj5JbnRlcmVzdCBFYXJuZWQ8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cImludGVyZXN0LWVhcm5lZFwiIHZhbHVlPXtcIiRcIiArIGludGVyZXN0X2Vhcm5lZC50b0xvY2FsZVN0cmluZygpfSBwbGFjZWhvbGRlcj1cIiQwXCIgcmVhZE9ubHkvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiaW50ZXJlc3QtcGFpZFwiPkludGVyZXN0IFBhaWQ8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cImludGVyZXN0LXBhaWRcIiB2YWx1ZT17XCIkXCIgKyBpbnRlcmVzdF9wYWlkLnRvTG9jYWxlU3RyaW5nKCl9IHBsYWNlaG9sZGVyPVwiJDBcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJuZXQtZWFybmluZ3NcIj5OZXQgRWFybmluZ3M8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cIm5ldC1lYXJuaW5nc1wiIHZhbHVlPXtcIiRcIiArIG5ldF9lYXJuaW5ncy50b0xvY2FsZVN0cmluZygpfSBwbGFjZWhvbGRlcj1cIiQwXCIgcmVhZE9ubHkvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwibmV0LWFweVwiPk5ldCBBUFk8L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cIm5ldC1hcHlcIiB2YWx1ZT17aXNOYU4obmV0X2FweSkgPyAnMCUnIDogbmV0X2FweS50b0xvY2FsZVN0cmluZygpICsgXCIlXCJ9IHBsYWNlaG9sZGVyPVwiMCVcIiByZWFkT25seS8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxzdHlsZSBnbG9iYWwganN4PntgXHJcbiAgICAgICAgICAgIC50b2tlbi1kaXN0cmlidXRpb24ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDgwcHgpO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjE0LCAyLCA0NCwgMC4xKTtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyMTQsIDIsIDQ0KTtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAudG9rZW4tZGlzdHJpYnV0aW9uID4gc3BhbiB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC50b2tlbi1kaXN0cmlidXRpb24gPiBkaXYge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC50b2tlbi1kaXN0cmlidXRpb24gPiBkaXYgPiBsYWJlbCB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAudG9rZW4tZGlzdHJpYnV0aW9uID4gZGl2ID4gaW5wdXQge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE2MHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4taGVhZGVyIHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTdlYWYzO1xyXG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4taGVhZGVyID4gLnJ0LXRyIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNBQUI4QzE7XHJcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdGJvZHksIC5ydC10aGVhZCB7XHJcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDEwNTVweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4taGVhZGVyID4gLnJ0LXRyID4gLnJ0LXRoOm50aC1vZi10eXBlKDEpID4gZGl2IHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMjVweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuLWxvYWRpbmcge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuLWV2ZW4ge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZERkRGRDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdGgge1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdGgsIC5ydC10ZCB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdGQge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdHIgPiAucnQtdGg6bnRoLW9mLXR5cGUoMSksIC5ydC10ciA+IC5ydC10ZDpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjc1cHggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdHIgPiAucnQtdGg6bnRoLW9mLXR5cGUoMiksIC5ydC10ciA+IC5ydC10ZDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAucnQtdHIgPiAucnQtdGg6bnRoLW9mLXR5cGUoMyksIC5ydC10ciA+IC5ydC10ZDpudGgtb2YtdHlwZSgzKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSg0KSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDQpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyMDBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSg1KSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDUpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5ydC10ciA+IC5ydC10aDpudGgtb2YtdHlwZSg2KSwgLnJ0LXRyID4gLnJ0LXRkOm50aC1vZi10eXBlKDYpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnJ0LXRyID4gLnJ0LXRoOm50aC1vZi10eXBlKDcpLCAucnQtdHIgPiAucnQtdGQ6bnRoLW9mLXR5cGUoNykge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDIwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnJ0LXRyID4gLnJ0LXRkIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAuY29tcC10YWJsZSB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLlJlYWN0VGFibGUgLnJ0LXRib2R5IC5ydC10ci1ncm91cDpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsMCwwLC4wNSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvPlxyXG4gICAgKVxyXG59XHJcblxyXG4vLyBNYXJrZXQgaW1hZ2UgKyBzeW1ib2wgKyBuYW1lIGNlbGwgZm9ybWF0dGluZ1xyXG5mdW5jdGlvbiBNYXJrZXRJdGVtKHByb3BzKSB7XHJcbiAgICByZXR1cm4oXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXJrZXRJdGVtXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtwcm9wcy5pbWFnZX0gYWx0PXtgJHtwcm9wcy5zeW1ib2x9IGxvZ29gfSAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPntwcm9wcy5uYW1lfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj57cHJvcHMuc3ltYm9sfTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjcwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXYge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5tYXJrZXRJdGVtID4gZGl2Om50aC1jaGlsZCgxKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODBweDtcclxuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxOTBweDtcclxuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXYgPiBpbWcge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0My41cHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNDMuNXB4O1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTguMjVweCwgMTMuMjVweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXYgPiBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxOXB4KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAubWFya2V0SXRlbSA+IGRpdiA+IHNwYW46bnRoLW9mLXR5cGUoMSkge1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLm1hcmtldEl0ZW0gPiBkaXYgPiBzcGFuOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjQUNCQkMyO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5cclxuLy8gQm9ycm93L1N1cHBseSBjZWxscyBmb3JtYXR0aW5nXHJcbmZ1bmN0aW9uIEZvcm1hdEl0ZW0ocHJvcHMpIHtcclxuICAgIHJldHVybihcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm1hdC1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICA8c3Bhbj4ke3Byb3BzLnR5cGUgPT09ICdzdXBwbHknID8gZm9ybWF0TnVtKHByb3BzLmdyb3NzX3N1cHBseSkgOiBmb3JtYXROdW0ocHJvcHMuZ3Jvc3NfYm9ycm93KX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgICAgICAgIHtwcm9wcy50eXBlID09PSAnc3VwcGx5JyA/IChcclxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5ncm9zc19zdXBwbHlfY2hhbmdlID4gMCA/IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY2hhbmdlLXVwXCI+K3twcm9wcy5ncm9zc19zdXBwbHlfY2hhbmdlLnRvRml4ZWQoMil9JTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtZG93blwiPntwcm9wcy5ncm9zc19zdXBwbHlfY2hhbmdlLnRvRml4ZWQoMil9JTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICAgICAgICAgIHByb3BzLmdyb3NzX2JvcnJvd19jaGFuZ2UgPiAwID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtdXBcIj4re3Byb3BzLmdyb3NzX2JvcnJvd19jaGFuZ2UudG9GaXhlZCgyKX0lPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS1kb3duXCI+e3Byb3BzLmdyb3NzX2JvcnJvd19jaGFuZ2UudG9GaXhlZCgyKX0lPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgIC5mb3JtYXQtaXRlbSB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtID4gc3BhbiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMThweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtID4gc3BhbjpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jaGFuZ2UtdXAge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHJnYigwLCAxOTAsIDApO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jaGFuZ2UtZG93biB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDIxNCwgMiwgNDQpO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT4gXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbi8vIEFQWSBjZWxscyBmb3JtYXR0aW5nXHJcbmZ1bmN0aW9uIEZvcm1hdEl0ZW1BUFkocHJvcHMpIHtcclxuICAgIHJldHVybihcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm1hdC1pdGVtXCI+XHJcbiAgICAgICAgICAgICAgICA8c3Bhbj57cHJvcHMudHlwZSA9PT0gJ3N1cHBseScgPyBwcm9wcy5zdXBwbHlfYXB5IDogcHJvcHMuYm9ycm93X2FweX0lPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgICB7cHJvcHMudHlwZSA9PT0gJ3N1cHBseScgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuc3VwcGx5X2FweV9jaGFuZ2UgPiAwID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtdXBcIj4re3Byb3BzLnN1cHBseV9hcHlfY2hhbmdlLnRvRml4ZWQoMil9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS1kb3duXCI+e3Byb3BzLnN1cHBseV9hcHlfY2hhbmdlLnRvRml4ZWQoMil9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuYm9ycm93X2FweV9jaGFuZ2UgPiAwID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjaGFuZ2UtdXBcIj4re3Byb3BzLmJvcnJvd19hcHlfY2hhbmdlLnRvRml4ZWQoMil9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNoYW5nZS1kb3duXCI+e3Byb3BzLmJvcnJvd19hcHlfY2hhbmdlLnRvRml4ZWQoMil9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgIC5mb3JtYXQtaXRlbSB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtID4gc3BhbiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMThweCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmZvcm1hdC1pdGVtID4gc3BhbjpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jaGFuZ2UtdXAge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHJnYigwLCAxOTAsIDApO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5jaGFuZ2UtZG93biB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogcmdiKDIxNCwgMiwgNDQpO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT4gXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbi8vIEZvcm1hdHMgbnVtYmVycyBzaW1pbGFyIHRvIENvbXBvdW5kIGRhc2hib2FyZCBsb29rXHJcbmZ1bmN0aW9uIGZvcm1hdE51bSh2YWx1ZSkge1xyXG4gICAgLy8gSWYgdmFsdWUgPiBhIG1pbGxpb25cclxuICAgIGlmICh2YWx1ZSA+IDEwMDAwMDApIHtcclxuICAgICAgICAvLyBDbGVhbmVkIG1pbGxpb24gZm9ybWF0dGluZ1xyXG4gICAgICAgIHJldHVybiAodmFsdWUgLyAxMDAwMDAwKS50b0ZpeGVkKDIpICsgJ00nO1xyXG4gICAgfSBlbHNlIGlmICh2YWx1ZSA+IDEwMDApIHtcclxuICAgICAgICAvLyBFbHNlLCBjbGVhbmVkIHRob3VzYW5kcyBmb3JtYXR0aW5nXHJcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAvIDEwMDApLnRvRml4ZWQoMCkgKyAnSyc7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIElucHV0IGNlbGxcclxuZnVuY3Rpb24gQ2FsY0NlbGwocHJvcHMpIHtcclxuICAgIC8vIFVwZGF0ZXMgYXJyYXkgc3RydWN0dXJlIG9mIHBhcmVudCBzdGF0ZSB2aWEgdXBkYXRlRGlzdHJpYnV0aW9uIGZ1bmN0aW9uXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVOdW0odmFsdWUpIHtcclxuICAgICAgICBwcm9wcy51cGRhdGVEaXN0cmlidXRpb24ocHJvcHMudHlwZSA9PT0gJ3N1cHBseScgPyAnc3VwcGx5JyA6ICdib3Jyb3cnLCBwcm9wcy5zeW1ib2wsIHBhcnNlRmxvYXQodmFsdWUpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FsY1wiPlxyXG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBzdGVwPVwiYW55XCIgdmFsdWU9e3Byb3BzLmRpc3RyaWJ1dGlvbltwcm9wcy50eXBlID09PSAnc3VwcGx5JyA/ICdzdXBwbHknIDogJ2JvcnJvdyddW3Byb3BzLnN5bWJvbF19IHBsYWNlaG9sZGVyPXtgJHtwcm9wcy5zeW1ib2x9IChVU0QpIHZhbHVlYH0gbWluPVwiMFwiIG9uQ2hhbmdlPXtlID0+IHVwZGF0ZU51bShlLnRhcmdldC52YWx1ZSl9IC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgIC5jYWxjID4gaW5wdXQge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U3ZWFmMztcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyMHB4KTtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufSJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\COMPDistributionCalculator.js */\"));\n} // Formats numbers similar to Compound dashboard look\n\n\nfunction formatNum(value) {\n  // If value > a million\n  if (value > 1000000) {\n    // Cleaned million formatting\n    return (value / 1000000).toFixed(2) + 'M';\n  } else if (value > 1000) {\n    // Else, cleaned thousands formatting\n    return (value / 1000).toFixed(0) + 'K';\n  }\n} // Input cell\n\n\nfunction CalcCell(props) {\n  // Updates array structure of parent state via updateDistribution function\n  function updateNum(value) {\n    props.updateDistribution(props.type === 'supply' ? 'supply' : 'borrow', props.symbol, parseFloat(value));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2923101118\" + \" \" + \"calc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"number\",\n    step: \"any\",\n    value: props.distribution[props.type === 'supply' ? 'supply' : 'borrow'][props.symbol],\n    placeholder: `${props.symbol} (USD) value`,\n    min: \"0\",\n    onChange: e => updateNum(e.target.value),\n    className: \"jsx-2923101118\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"2923101118\",\n    __self: this\n  }, \".calc.jsx-2923101118>input.jsx-2923101118{border:1px solid #e7eaf3;border-radius:5px;height:30px;-webkit-transform:translateY(20px);-ms-transform:translateY(20px);transform:translateY(20px);padding-left:5px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\COMPDistributionCalculator.js */\"));\n}","map":{"version":3,"sources":["C:/Users/furso/Desktop/stat.farm/components/COMPDistributionCalculator.js"],"names":["ReactTable","useState","useEffect","COMPDistributionCalculator","props","distribution","setDistribution","calculateValues","interest_earned","set_interest_earned","interest_paid","set_interest_paid","comp_earned","set_comp_earned","comp_earned_usd","set_comp_earned_usd","net_earnings","set_net_earnings","net_apy","set_net_apy","updateDistribution","type","symbol","value","opposite","existing","isNaN","int_earned","int_paid","sum_amount","key","supply","parseFloat","i","data","length","supply_apy","gross_supply","comp_allocation","borrow","borrow_apy","gross_borrow","price","Number","toFixed","columns","Header","Accessor","Cell","row","original","toLocaleString","MarketItem","image","name","FormatItem","formatNum","gross_supply_change","gross_borrow_change","FormatItemAPY","supply_apy_change","borrow_apy_change","CalcCell","updateNum","e","target"],"mappings":"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","sourcesContent":["import ReactTable from 'react-table-6' // React-table\r\nimport {useState, useEffect} from 'react' // State storage for calculations\r\n\r\nexport default function COMPDistributionCalculator(props) {\r\n    // Initialize distribution input state holder\r\n    const [distribution, setDistribution] = useState({\r\n        \"supply\": {\r\n            'DAI': 0,\r\n            'USDC': 0,\r\n            'ETH': 0,\r\n            'USDT': 0,\r\n            'ZRX': 0,\r\n            'REP': 0,\r\n            'BAT': 0,\r\n            'WBTC': 0,\r\n            'SAI': 0\r\n        },\r\n        \"borrow\": {\r\n            'DAI': 0,\r\n            'USDC': 0,\r\n            'ETH': 0,\r\n            'USDT': 0,\r\n            'ZRX': 0,\r\n            'REP': 0,\r\n            'BAT': 0,\r\n            'WBTC': 0,\r\n            'SAI': 0\r\n        }});\r\n\r\n    // On change in distribution, re-calculate token distribution\r\n    useEffect(() => calculateValues(), [distribution]);\r\n\r\n    // Setup hooks to hold input values.\r\n    // This could have been one item but this is easier to manage.\r\n    const [interest_earned, set_interest_earned] = useState(0);\r\n    const [interest_paid, set_interest_paid] = useState(0);\r\n    const [comp_earned, set_comp_earned] = useState(0);\r\n    const [comp_earned_usd, set_comp_earned_usd] = useState(0);\r\n    const [net_earnings, set_net_earnings] = useState(0);\r\n    const [net_apy, set_net_apy] = useState(0);\r\n\r\n    // Update distribution function\r\n    function updateDistribution(type, symbol, value) {\r\n        let opposite = {...distribution[type === 'supply' ? 'borrow' : 'supply']};\r\n        let existing = {...distribution[type === 'supply' ? 'supply' : 'borrow']}\r\n        \r\n        // Mutate object depending on input field\r\n        setDistribution({\r\n            [type === 'supply' ? 'borrow' : 'supply']: {\r\n                ...opposite\r\n            },\r\n            [type === 'supply' ? 'supply' : 'borrow']: {\r\n                ...existing,\r\n                [symbol]: isNaN(value) ? 0 : value\r\n            }\r\n        });\r\n    }\r\n\r\n    // Calculate COMP distribution\r\n    function calculateValues() {\r\n        let comp_earned = 0; // Total COMP Earned\r\n        let int_earned = 0; // Earned interest\r\n        let int_paid = 0; // Paid interest\r\n        let sum_amount = 0; // Sum of supplied or borrowed\r\n\r\n        // Loop through supplied tokens\r\n        for (var key in distribution.supply) {\r\n            // If supplied value > $0\r\n            if (parseFloat(distribution.supply[key]) > 0) {\r\n                // Loop through Compound-supported tokens\r\n                for (let i = 0; i < props.data.length; i++) {\r\n                    // Search for matching token and increment values\r\n                    if (props.data[i].symbol === key) {\r\n                        int_earned += parseFloat(distribution.supply[key]) * (parseFloat(props.data[i].supply_apy) / 100);\r\n                        comp_earned += (parseFloat(distribution.supply[key]) / props.data[i].gross_supply) * props.data[i].comp_allocation;\r\n                        sum_amount += parseFloat(distribution.supply[key]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Loop through borrowed tokens\r\n        for (var key in distribution.borrow) {\r\n            // If borrowed value > $0\r\n            if (parseFloat(distribution.borrow[key]) > 0) {\r\n                // Loop through Compound-supported tokens\r\n                for (let i = 0; i < props.data.length; i++) {\r\n                    // Search for matching tokens and increment values\r\n                    if (props.data[i].symbol === key) {\r\n                        int_paid += parseFloat(distribution.borrow[key]) * (parseFloat(props.data[i].borrow_apy) / 100);\r\n                        comp_earned += (parseFloat(distribution.borrow[key]) / props.data[i].gross_borrow) * props.data[i].comp_allocation;\r\n                        sum_amount += parseFloat(distribution.borrow[key]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Net earnings calculations\r\n        let net_earnings = (comp_earned * props.price) + int_earned - int_paid;\r\n\r\n        // Update state with appropriate calculations\r\n        set_comp_earned(Number(comp_earned.toFixed(2)));\r\n        set_comp_earned_usd(Number((comp_earned * props.price).toFixed(2)));\r\n        set_interest_earned(Number(int_earned.toFixed(2)));\r\n        set_interest_paid(Number(int_paid.toFixed(2)));\r\n        set_net_earnings(Number(net_earnings.toFixed(2)));\r\n        set_net_apy(((net_earnings / sum_amount) * 100).toFixed(2));\r\n    }\r\n\r\n    // React-table setup\r\n    const columns = [\r\n        {Header: 'Market', Accessor: 'image', Cell: row => <MarketItem {...row.original} />},\r\n        {Header: 'Gross Supply', Accessor: 'gross_supply', Cell: row => <FormatItem {...row.original} type=\"supply\" />},\r\n        {Header: 'Supply APY', Accessor: 'supply_apy', Cell: row => <FormatItemAPY {...row.original} type=\"supply\" />},\r\n        {Header: '$ Supplied', Accessor: 'gross_supply', Cell: row => <CalcCell {...row.original} type=\"supply\" updateDistribution={updateDistribution} distribution={distribution}/>},\r\n        {Header: 'Gross Borrow', Accessor: 'gross_borrow', Cell: row => <FormatItem {...row.original} />},\r\n        {Header: 'Borrow APY', Accessor: 'borrow_apy', Cell: row => <FormatItemAPY {...row.original} />},\r\n        {Header: '$ Borrowed', Accessor: 'gross_borrow', Cell: row => <CalcCell {...row.original} updateDistribution={updateDistribution} distribution={distribution} />},\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <ReactTable\r\n                data={props.data}\r\n                columns={columns} \r\n                showPagination={false}\r\n                defaultPageSize={props.data.length}\r\n                resizable={false}\r\n                className=\"comp-table\"\r\n            />\r\n            <div className=\"token-distribution\">\r\n                <span>Calculated token distribution</span>\r\n                <br />\r\n                <br />\r\n                <div>\r\n                    <label htmlFor=\"comp-earned\">COMP Earned</label>\r\n                    <input id=\"comp-earned\" value={comp_earned.toLocaleString()} placeholder=\"0\" readOnly/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"comp-earned-usd\">COMP Earned (USD)</label>\r\n                    <input id=\"comp-earned-usd\" value={\"$\" + comp_earned_usd.toLocaleString()} placeholder=\"$0\" readOnly/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"interest-earned\">Interest Earned</label>\r\n                    <input id=\"interest-earned\" value={\"$\" + interest_earned.toLocaleString()} placeholder=\"$0\" readOnly/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"interest-paid\">Interest Paid</label>\r\n                    <input id=\"interest-paid\" value={\"$\" + interest_paid.toLocaleString()} placeholder=\"$0\" readOnly/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"net-earnings\">Net Earnings</label>\r\n                    <input id=\"net-earnings\" value={\"$\" + net_earnings.toLocaleString()} placeholder=\"$0\" readOnly/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"net-apy\">Net APY</label>\r\n                    <input id=\"net-apy\" value={isNaN(net_apy) ? '0%' : net_apy.toLocaleString() + \"%\"} placeholder=\"0%\" readOnly/>\r\n                </div>\r\n            </div>\r\n            <style global jsx>{`\r\n            .token-distribution {\r\n                width: calc(100% - 80px);\r\n                margin: 20px;\r\n                padding: 20px;\r\n                background-color: rgba(214, 2, 44, 0.1);\r\n                border: 1px solid rgb(214, 2, 44);\r\n                border-radius: 5px;\r\n                text-align: center;\r\n            }\r\n            .token-distribution > span {\r\n                font-weight: bold;\r\n                text-decoration: underline;\r\n            }\r\n            .token-distribution > div {\r\n                display: inline-block;\r\n                padding: 5px;\r\n            }\r\n            .token-distribution > div > label {\r\n                display: block;\r\n            }\r\n            .token-distribution > div > input {\r\n                display: block;\r\n                height: 30px;\r\n                margin-top: 5px;\r\n                border: 1px solid #ccc;\r\n                border-radius: 5px;\r\n                text-align: center;\r\n                font-size: 17px;\r\n                width: 160px;\r\n            }\r\n            .-header {\r\n                height: 30px;\r\n                border-bottom: 1px solid #e7eaf3;\r\n                box-shadow: none !important;\r\n            }\r\n            .-header > .rt-tr {\r\n                font-size: 13px;\r\n                font-weight: bold;\r\n                color: #AAB8C1;\r\n                line-height: 30px;\r\n            }\r\n            .rt-tbody, .rt-thead {\r\n                min-width: 1055px !important;\r\n            }\r\n            .-header > .rt-tr > .rt-th:nth-of-type(1) > div {\r\n                padding-left: 25px;\r\n            }\r\n            .-loading {\r\n                display: none;\r\n            }\r\n            .-even {\r\n                background-color: #FDFDFD;\r\n            }\r\n            .rt-th {\r\n                text-align: left;\r\n            }\r\n            .rt-th, .rt-td {\r\n                border-right: none !important;\r\n            }\r\n            .rt-td {\r\n                border-bottom: none;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(1), .rt-tr > .rt-td:nth-of-type(1) {\r\n                width: 275px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(2), .rt-tr > .rt-td:nth-of-type(2) {\r\n                width: 100px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(3), .rt-tr > .rt-td:nth-of-type(3) {\r\n                width: 90px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(4), .rt-tr > .rt-td:nth-of-type(4) {\r\n                width: 200px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(5), .rt-tr > .rt-td:nth-of-type(5) {\r\n                width: 100px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(6), .rt-tr > .rt-td:nth-of-type(6) {\r\n                width: 90px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(7), .rt-tr > .rt-td:nth-of-type(7) {\r\n                width: 200px !important;\r\n            }\r\n            .rt-tr > .rt-td {\r\n                padding: 0px;\r\n            }\r\n            .comp-table {\r\n                border: none;\r\n            }\r\n            .ReactTable .rt-tbody .rt-tr-group:last-child {\r\n                border-bottom: 1px solid rgba(0,0,0,.05);\r\n            }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\n// Market image + symbol + name cell formatting\r\nfunction MarketItem(props) {\r\n    return(\r\n        <>\r\n            <div className=\"marketItem\">\r\n                <div>\r\n                    <img src={props.image} alt={`${props.symbol} logo`} />\r\n                </div>\r\n                <div>\r\n                    <span>{props.name}</span>\r\n                    <br />\r\n                    <span>{props.symbol}</span>\r\n                </div>\r\n            </div>\r\n            <style jsx>{`\r\n            .marketItem {\r\n                display: inline-block;\r\n                height: 70px;\r\n                width: 270px;\r\n            }\r\n            .marketItem > div {\r\n                display: inline-block;\r\n                height: 100%;\r\n            }\r\n            .marketItem > div:nth-child(1) {\r\n                width: 80px;\r\n                vertical-align: top;\r\n            }\r\n            .marketItem > div:nth-child(2) {\r\n                width: 190px;\r\n                vertical-align: top;\r\n            }\r\n            .marketItem > div > img {\r\n                height: 43.5px;\r\n                width: 43.5px;\r\n                transform: translate(18.25px, 13.25px);\r\n            }\r\n            .marketItem > div > span {\r\n                display: inline-block;\r\n                transform: translateY(19px);\r\n            }\r\n            .marketItem > div > span:nth-of-type(1) {\r\n                font-weight: bold;\r\n            }\r\n            .marketItem > div > span:nth-of-type(2) {\r\n                color: #ACBBC2;\r\n                font-size: 14px;\r\n            }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\n// Borrow/Supply cells formatting\r\nfunction FormatItem(props) {\r\n    return(\r\n        <>\r\n            <div className=\"format-item\">\r\n                <span>${props.type === 'supply' ? formatNum(props.gross_supply) : formatNum(props.gross_borrow)}</span>\r\n                <br />\r\n                {props.type === 'supply' ? (\r\n                    props.gross_supply_change > 0 ? (\r\n                        <span className=\"change-up\">+{props.gross_supply_change.toFixed(2)}%</span>\r\n                    ) : (\r\n                        <span className=\"change-down\">{props.gross_supply_change.toFixed(2)}%</span>\r\n                    )\r\n                ) : (\r\n                    props.gross_borrow_change > 0 ? (\r\n                        <span className=\"change-up\">+{props.gross_borrow_change.toFixed(2)}%</span>\r\n                    ) : (\r\n                        <span className=\"change-down\">{props.gross_borrow_change.toFixed(2)}%</span>\r\n                    )\r\n                )}\r\n            </div>\r\n            <style jsx>{`\r\n            .format-item {\r\n                height: 70px;\r\n            }\r\n            .format-item > span {\r\n                display: inline-block;\r\n                transform: translateY(18px);\r\n            }\r\n            .format-item > span:nth-of-type(1) {\r\n                font-weight: 500;\r\n            }\r\n            .change-up {\r\n                color: rgb(0, 190, 0);\r\n                font-size: 14px;\r\n            }\r\n            .change-down {\r\n                color: rgb(214, 2, 44);\r\n                font-size: 14px;\r\n            }\r\n            `}</style> \r\n        </>\r\n    )\r\n}\r\n\r\n// APY cells formatting\r\nfunction FormatItemAPY(props) {\r\n    return(\r\n        <>\r\n            <div className=\"format-item\">\r\n                <span>{props.type === 'supply' ? props.supply_apy : props.borrow_apy}%</span>\r\n                <br />\r\n                {props.type === 'supply' ? (\r\n                    props.supply_apy_change > 0 ? (\r\n                        <span className=\"change-up\">+{props.supply_apy_change.toFixed(2)}</span>\r\n                    ) : (\r\n                        <span className=\"change-down\">{props.supply_apy_change.toFixed(2)}</span>\r\n                    )\r\n                ) : (\r\n                    props.borrow_apy_change > 0 ? (\r\n                        <span className=\"change-up\">+{props.borrow_apy_change.toFixed(2)}</span>\r\n                    ) : (\r\n                        <span className=\"change-down\">{props.borrow_apy_change.toFixed(2)}</span>\r\n                    )\r\n                )}\r\n            </div>\r\n            <style jsx>{`\r\n            .format-item {\r\n                height: 70px;\r\n            }\r\n            .format-item > span {\r\n                display: inline-block;\r\n                transform: translateY(18px);\r\n            }\r\n            .format-item > span:nth-of-type(1) {\r\n                font-weight: 500;\r\n            }\r\n            .change-up {\r\n                color: rgb(0, 190, 0);\r\n                font-size: 14px;\r\n            }\r\n            .change-down {\r\n                color: rgb(214, 2, 44);\r\n                font-size: 14px;\r\n            }\r\n            `}</style> \r\n        </>\r\n    )\r\n}\r\n\r\n// Formats numbers similar to Compound dashboard look\r\nfunction formatNum(value) {\r\n    // If value > a million\r\n    if (value > 1000000) {\r\n        // Cleaned million formatting\r\n        return (value / 1000000).toFixed(2) + 'M';\r\n    } else if (value > 1000) {\r\n        // Else, cleaned thousands formatting\r\n        return (value / 1000).toFixed(0) + 'K';\r\n    }\r\n}\r\n\r\n// Input cell\r\nfunction CalcCell(props) {\r\n    // Updates array structure of parent state via updateDistribution function\r\n    function updateNum(value) {\r\n        props.updateDistribution(props.type === 'supply' ? 'supply' : 'borrow', props.symbol, parseFloat(value));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"calc\">\r\n                <input type=\"number\" step=\"any\" value={props.distribution[props.type === 'supply' ? 'supply' : 'borrow'][props.symbol]} placeholder={`${props.symbol} (USD) value`} min=\"0\" onChange={e => updateNum(e.target.value)} />\r\n            </div>\r\n            <style jsx>{`\r\n            .calc > input {\r\n                border: 1px solid #e7eaf3;\r\n                border-radius: 5px;\r\n                height: 30px;\r\n                transform: translateY(20px);\r\n                padding-left: 5px;\r\n            }\r\n            `}</style>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}