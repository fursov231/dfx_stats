{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\furso\\\\Desktop\\\\stat.farm\\\\components\\\\Transaction.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ReactTable from 'react-table-6'; // React-table\n\nimport { useState, useEffect } from 'react'; // State storage for calculations\n\nexport default function TransactionList(props) {\n  var _this = this;\n\n  function Hash(props) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"jsx-1458341634\" + \" \" + \"marketItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-1458341634\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }, props.hash)), __jsx(_JSXStyle, {\n      id: \"1458341634\",\n      __self: this\n    }, \".marketItem.jsx-1458341634{display:inline-block;height:70px;width:270px;}.marketItem.jsx-1458341634>div.jsx-1458341634{display:inline-block;height:100%;}.marketItem.jsx-1458341634>div.jsx-1458341634:nth-child(1){width:80px;vertical-align:top;}.marketItem.jsx-1458341634>div.jsx-1458341634:nth-child(2){width:190px;vertical-align:top;}.marketItem.jsx-1458341634>div.jsx-1458341634>img.jsx-1458341634{height:43.5px;width:43.5px;-webkit-transform:translate(18.25px,13.25px);-ms-transform:translate(18.25px,13.25px);transform:translate(18.25px,13.25px);}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634{display:inline-block;-webkit-transform:translateY(19px);-ms-transform:translateY(19px);transform:translateY(19px);}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634:nth-of-type(1){font-weight:bold;}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634:nth-of-type(2){color:#ACBBC2;font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n  }\n\n  function From(props) {\n    //debugger\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"jsx-1458341634\" + \" \" + \"marketItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"jsx-1458341634\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, props.from)), __jsx(_JSXStyle, {\n      id: \"1458341634\",\n      __self: this\n    }, \".marketItem.jsx-1458341634{display:inline-block;height:70px;width:270px;}.marketItem.jsx-1458341634>div.jsx-1458341634{display:inline-block;height:100%;}.marketItem.jsx-1458341634>div.jsx-1458341634:nth-child(1){width:80px;vertical-align:top;}.marketItem.jsx-1458341634>div.jsx-1458341634:nth-child(2){width:190px;vertical-align:top;}.marketItem.jsx-1458341634>div.jsx-1458341634>img.jsx-1458341634{height:43.5px;width:43.5px;-webkit-transform:translate(18.25px,13.25px);-ms-transform:translate(18.25px,13.25px);transform:translate(18.25px,13.25px);}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634{display:inline-block;-webkit-transform:translateY(19px);-ms-transform:translateY(19px);transform:translateY(19px);}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634:nth-of-type(1){font-weight:bold;}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634:nth-of-type(2){color:#ACBBC2;font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n  } // React-table setup\n\n\n  var columns = [{\n    Header: 'Hash транзакции',\n    Accessor: 'Hash',\n    Cell: function Cell(row) {\n      return __jsx(Hash, _extends({}, row.original, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 68\n        }\n      }));\n    }\n  }, {\n    Header: 'Адрес отправителя',\n    Accessor: 'gross_supply',\n    Cell: function Cell(row) {\n      return __jsx(From, _extends({}, row.original, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 78\n        }\n      }));\n    }\n  }];\n  return __jsx(React.Fragment, null, __jsx(ReactTable, {\n    data: props.data,\n    columns: columns,\n    showPagination: false,\n    defaultPageSize: props.data.length,\n    resizable: false,\n    className: \"comp-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-1461891372\" + \" \" + \"token-distribution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Calculated token distribution\"), __jsx(\"br\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    className: \"jsx-1461891372\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"1461891372\",\n    __self: this\n  }, \".token-distribution{width:calc(100% - 80px);margin:20px;padding:20px;background-color:rgba(214,2,44,0.1);border:1px solid rgb(214,2,44);border-radius:5px;text-align:center;}.token-distribution>span{font-weight:bold;-webkit-text-decoration:underline;text-decoration:underline;}.token-distribution>div{display:inline-block;padding:5px;}.token-distribution>div>label{display:block;}.token-distribution>div>input{display:block;height:30px;margin-top:5px;border:1px solid #ccc;border-radius:5px;text-align:center;font-size:17px;width:160px;}.-header{height:30px;border-bottom:1px solid #e7eaf3;box-shadow:none !important;}.-header>.rt-tr{font-size:13px;font-weight:bold;color:#AAB8C1;line-height:30px;}.rt-tbody,.rt-thead{min-width:1055px !important;}.-header>.rt-tr>.rt-th:nth-of-type(1)>div{padding-left:25px;}.-loading{display:none;}.-even{background-color:#FDFDFD;}.rt-th{text-align:left;}.rt-th,.rt-td{border-right:none !important;}.rt-td{border-bottom:none;}.rt-tr>.rt-th:nth-of-type(1),.rt-tr>.rt-td:nth-of-type(1){width:275px !important;}.rt-tr>.rt-th:nth-of-type(2),.rt-tr>.rt-td:nth-of-type(2){width:100px !important;}.rt-tr>.rt-th:nth-of-type(3),.rt-tr>.rt-td:nth-of-type(3){width:90px !important;}.rt-tr>.rt-th:nth-of-type(4),.rt-tr>.rt-td:nth-of-type(4){width:200px !important;}.rt-tr>.rt-th:nth-of-type(5),.rt-tr>.rt-td:nth-of-type(5){width:100px !important;}.rt-tr>.rt-th:nth-of-type(6),.rt-tr>.rt-td:nth-of-type(6){width:90px !important;}.rt-tr>.rt-th:nth-of-type(7),.rt-tr>.rt-td:nth-of-type(7){width:200px !important;}.rt-tr>.rt-td{padding:0px;}.comp-table{border:none;}.ReactTable .rt-tbody .rt-tr-group:last-child{border-bottom:1px solid rgba(0,0,0,.05);}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n} // Market image + symbol + name cell formatting\n\n_c = TransactionList;\n\nfunction MarketItem(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-1458341634\" + \" \" + \"marketItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: props.image,\n    alt: \"\".concat(props.symbol, \" logo\"),\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, props.name), __jsx(\"br\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }), __jsx(\"span\", {\n    className: \"jsx-1458341634\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, props.symbol))), __jsx(_JSXStyle, {\n    id: \"1458341634\",\n    __self: this\n  }, \".marketItem.jsx-1458341634{display:inline-block;height:70px;width:270px;}.marketItem.jsx-1458341634>div.jsx-1458341634{display:inline-block;height:100%;}.marketItem.jsx-1458341634>div.jsx-1458341634:nth-child(1){width:80px;vertical-align:top;}.marketItem.jsx-1458341634>div.jsx-1458341634:nth-child(2){width:190px;vertical-align:top;}.marketItem.jsx-1458341634>div.jsx-1458341634>img.jsx-1458341634{height:43.5px;width:43.5px;-webkit-transform:translate(18.25px,13.25px);-ms-transform:translate(18.25px,13.25px);transform:translate(18.25px,13.25px);}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634{display:inline-block;-webkit-transform:translateY(19px);-ms-transform:translateY(19px);transform:translateY(19px);}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634:nth-of-type(1){font-weight:bold;}.marketItem.jsx-1458341634>div.jsx-1458341634>span.jsx-1458341634:nth-of-type(2){color:#ACBBC2;font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n} // Borrow/Supply cells formatting\n\n\n_c2 = MarketItem;\n\nfunction FormatItem(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-991934934\" + \" \" + \"format-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-991934934\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, \"$\", props.type === 'supply' ? formatNum(props.gross_supply) : formatNum(props.gross_borrow)), __jsx(\"br\", {\n    className: \"jsx-991934934\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }), props.type === 'supply' ? props.gross_supply_change > 0 ? __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }, \"+\", props.gross_supply_change.toFixed(2), \"%\") : __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, props.gross_supply_change.toFixed(2), \"%\") : props.gross_borrow_change > 0 ? __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, \"+\", props.gross_borrow_change.toFixed(2), \"%\") : __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, props.gross_borrow_change.toFixed(2), \"%\")), __jsx(_JSXStyle, {\n    id: \"991934934\",\n    __self: this\n  }, \".format-item.jsx-991934934{height:70px;}.format-item.jsx-991934934>span.jsx-991934934{display:inline-block;-webkit-transform:translateY(18px);-ms-transform:translateY(18px);transform:translateY(18px);}.format-item.jsx-991934934>span.jsx-991934934:nth-of-type(1){font-weight:500;}.change-up.jsx-991934934{color:rgb(0,190,0);font-size:14px;}.change-down.jsx-991934934{color:rgb(214,2,44);font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n} // APY cells formatting\n\n\n_c3 = FormatItem;\n\nfunction FormatItemAPY(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-991934934\" + \" \" + \"format-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-991934934\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, props.type === 'supply' ? props.supply_apy : props.borrow_apy, \"%\"), __jsx(\"br\", {\n    className: \"jsx-991934934\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }), props.type === 'supply' ? props.supply_apy_change > 0 ? __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, \"+\", props.supply_apy_change.toFixed(2)) : __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, props.supply_apy_change.toFixed(2)) : props.borrow_apy_change > 0 ? __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, \"+\", props.borrow_apy_change.toFixed(2)) : __jsx(\"span\", {\n    className: \"jsx-991934934\" + \" \" + \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 25\n    }\n  }, props.borrow_apy_change.toFixed(2))), __jsx(_JSXStyle, {\n    id: \"991934934\",\n    __self: this\n  }, \".format-item.jsx-991934934{height:70px;}.format-item.jsx-991934934>span.jsx-991934934{display:inline-block;-webkit-transform:translateY(18px);-ms-transform:translateY(18px);transform:translateY(18px);}.format-item.jsx-991934934>span.jsx-991934934:nth-of-type(1){font-weight:500;}.change-up.jsx-991934934{color:rgb(0,190,0);font-size:14px;}.change-down.jsx-991934934{color:rgb(214,2,44);font-size:14px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n} // Formats numbers similar to Compound dashboard look\n\n\n_c4 = FormatItemAPY;\n\nfunction formatNum(value) {\n  // If value > a million\n  if (value > 1000000) {\n    // Cleaned million formatting\n    return (value / 1000000).toFixed(2) + 'M';\n  } else if (value > 1000) {\n    // Else, cleaned thousands formatting\n    return (value / 1000).toFixed(0) + 'K';\n  }\n} // Input cell\n\n\nfunction CalcCell(props) {\n  // Updates array structure of parent state via updateDistribution function\n  function updateNum(value) {\n    props.updateDistribution(props.type === 'supply' ? 'supply' : 'borrow', props.symbol, parseFloat(value));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2923101118\" + \" \" + \"calc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"number\",\n    step: \"any\",\n    value: props.distribution[props.type === 'supply' ? 'supply' : 'borrow'][props.symbol],\n    placeholder: \"\".concat(props.symbol, \" (USD) value\"),\n    min: \"0\",\n    onChange: function onChange(e) {\n      return updateNum(e.target.value);\n    },\n    className: \"jsx-2923101118\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 17\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"2923101118\",\n    __self: this\n  }, \".calc.jsx-2923101118>input.jsx-2923101118{border:1px solid #e7eaf3;border-radius:5px;height:30px;-webkit-transform:translateY(20px);-ms-transform:translateY(20px);transform:translateY(20px);padding-left:5px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n}\n\n_c5 = CalcCell;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TransactionList\");\n$RefreshReg$(_c2, \"MarketItem\");\n$RefreshReg$(_c3, \"FormatItem\");\n$RefreshReg$(_c4, \"FormatItemAPY\");\n$RefreshReg$(_c5, \"CalcCell\");","map":{"version":3,"sources":["C:/Users/furso/Desktop/stat.farm/components/Transaction.js"],"names":["ReactTable","useState","useEffect","TransactionList","props","Hash","hash","From","from","columns","Header","Accessor","Cell","row","original","data","length","MarketItem","image","symbol","name","FormatItem","type","formatNum","gross_supply","gross_borrow","gross_supply_change","toFixed","gross_borrow_change","FormatItemAPY","supply_apy","borrow_apy","supply_apy_change","borrow_apy_change","value","CalcCell","updateNum","updateDistribution","parseFloat","distribution","e","target"],"mappings":"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","sourcesContent":["import ReactTable from 'react-table-6' // React-table\r\nimport {useState, useEffect} from 'react' // State storage for calculations\r\n\r\nexport default function TransactionList(props) {\r\n\r\n\r\n    function Hash(props) {\r\n\r\n        return(\r\n            <>\r\n                <div className=\"marketItem\">\r\n                    <div>\r\n                        {props.hash}\r\n                    </div>\r\n\r\n                </div>\r\n                <style jsx>{`\r\n            .marketItem {\r\n                display: inline-block;\r\n                height: 70px;\r\n                width: 270px;\r\n            }\r\n            .marketItem > div {\r\n                display: inline-block;\r\n                height: 100%;\r\n            }\r\n            .marketItem > div:nth-child(1) {\r\n                width: 80px;\r\n                vertical-align: top;\r\n            }\r\n            .marketItem > div:nth-child(2) {\r\n                width: 190px;\r\n                vertical-align: top;\r\n            }\r\n            .marketItem > div > img {\r\n                height: 43.5px;\r\n                width: 43.5px;\r\n                transform: translate(18.25px, 13.25px);\r\n            }\r\n            .marketItem > div > span {\r\n                display: inline-block;\r\n                transform: translateY(19px);\r\n            }\r\n            .marketItem > div > span:nth-of-type(1) {\r\n                font-weight: bold;\r\n            }\r\n            .marketItem > div > span:nth-of-type(2) {\r\n                color: #ACBBC2;\r\n                font-size: 14px;\r\n            }\r\n            `}</style>\r\n            </>\r\n        )\r\n    }\r\n\r\n    function From(props) {\r\n//debugger\r\n\r\n        return(\r\n            <>\r\n                <div className=\"marketItem\">\r\n                    <div>\r\n                        {props.from}\r\n                    </div>\r\n\r\n                </div>\r\n                <style jsx>{`\r\n            .marketItem {\r\n                display: inline-block;\r\n                height: 70px;\r\n                width: 270px;\r\n            }\r\n            .marketItem > div {\r\n                display: inline-block;\r\n                height: 100%;\r\n            }\r\n            .marketItem > div:nth-child(1) {\r\n                width: 80px;\r\n                vertical-align: top;\r\n            }\r\n            .marketItem > div:nth-child(2) {\r\n                width: 190px;\r\n                vertical-align: top;\r\n            }\r\n            .marketItem > div > img {\r\n                height: 43.5px;\r\n                width: 43.5px;\r\n                transform: translate(18.25px, 13.25px);\r\n            }\r\n            .marketItem > div > span {\r\n                display: inline-block;\r\n                transform: translateY(19px);\r\n            }\r\n            .marketItem > div > span:nth-of-type(1) {\r\n                font-weight: bold;\r\n            }\r\n            .marketItem > div > span:nth-of-type(2) {\r\n                color: #ACBBC2;\r\n                font-size: 14px;\r\n            }\r\n            `}</style>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    // React-table setup\r\n    const columns = [\r\n        {Header: 'Hash транзакции', Accessor: 'Hash', Cell: row => <Hash {...row.original} />},\r\n        {Header: 'Адрес отправителя', Accessor: 'gross_supply', Cell: row => <From {...row.original}/>},\r\n\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <ReactTable\r\n                data={props.data}\r\n                columns={columns}\r\n                showPagination={false}\r\n                defaultPageSize={props.data.length}\r\n                resizable={false}\r\n                className=\"comp-table\"\r\n            />\r\n            <div className=\"token-distribution\">\r\n                <span>Calculated token distribution</span>\r\n                <br />\r\n                <br />\r\n            </div>\r\n            <style global jsx>{`\r\n            .token-distribution {\r\n                width: calc(100% - 80px);\r\n                margin: 20px;\r\n                padding: 20px;\r\n                background-color: rgba(214, 2, 44, 0.1);\r\n                border: 1px solid rgb(214, 2, 44);\r\n                border-radius: 5px;\r\n                text-align: center;\r\n            }\r\n            .token-distribution > span {\r\n                font-weight: bold;\r\n                text-decoration: underline;\r\n            }\r\n            .token-distribution > div {\r\n                display: inline-block;\r\n                padding: 5px;\r\n            }\r\n            .token-distribution > div > label {\r\n                display: block;\r\n            }\r\n            .token-distribution > div > input {\r\n                display: block;\r\n                height: 30px;\r\n                margin-top: 5px;\r\n                border: 1px solid #ccc;\r\n                border-radius: 5px;\r\n                text-align: center;\r\n                font-size: 17px;\r\n                width: 160px;\r\n            }\r\n            .-header {\r\n                height: 30px;\r\n                border-bottom: 1px solid #e7eaf3;\r\n                box-shadow: none !important;\r\n            }\r\n            .-header > .rt-tr {\r\n                font-size: 13px;\r\n                font-weight: bold;\r\n                color: #AAB8C1;\r\n                line-height: 30px;\r\n            }\r\n            .rt-tbody, .rt-thead {\r\n                min-width: 1055px !important;\r\n            }\r\n            .-header > .rt-tr > .rt-th:nth-of-type(1) > div {\r\n                padding-left: 25px;\r\n            }\r\n            .-loading {\r\n                display: none;\r\n            }\r\n            .-even {\r\n                background-color: #FDFDFD;\r\n            }\r\n            .rt-th {\r\n                text-align: left;\r\n            }\r\n            .rt-th, .rt-td {\r\n                border-right: none !important;\r\n            }\r\n            .rt-td {\r\n                border-bottom: none;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(1), .rt-tr > .rt-td:nth-of-type(1) {\r\n                width: 275px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(2), .rt-tr > .rt-td:nth-of-type(2) {\r\n                width: 100px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(3), .rt-tr > .rt-td:nth-of-type(3) {\r\n                width: 90px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(4), .rt-tr > .rt-td:nth-of-type(4) {\r\n                width: 200px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(5), .rt-tr > .rt-td:nth-of-type(5) {\r\n                width: 100px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(6), .rt-tr > .rt-td:nth-of-type(6) {\r\n                width: 90px !important;\r\n            }\r\n            .rt-tr > .rt-th:nth-of-type(7), .rt-tr > .rt-td:nth-of-type(7) {\r\n                width: 200px !important;\r\n            }\r\n            .rt-tr > .rt-td {\r\n                padding: 0px;\r\n            }\r\n            .comp-table {\r\n                border: none;\r\n            }\r\n            .ReactTable .rt-tbody .rt-tr-group:last-child {\r\n                border-bottom: 1px solid rgba(0,0,0,.05);\r\n            }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\n// Market image + symbol + name cell formatting\r\nfunction MarketItem(props) {\r\n    return(\r\n        <>\r\n            <div className=\"marketItem\">\r\n                <div>\r\n                    <img src={props.image} alt={`${props.symbol} logo`} />\r\n                </div>\r\n                <div>\r\n                    <span>{props.name}</span>\r\n                    <br />\r\n                    <span>{props.symbol}</span>\r\n                </div>\r\n            </div>\r\n            <style jsx>{`\r\n            .marketItem {\r\n                display: inline-block;\r\n                height: 70px;\r\n                width: 270px;\r\n            }\r\n            .marketItem > div {\r\n                display: inline-block;\r\n                height: 100%;\r\n            }\r\n            .marketItem > div:nth-child(1) {\r\n                width: 80px;\r\n                vertical-align: top;\r\n            }\r\n            .marketItem > div:nth-child(2) {\r\n                width: 190px;\r\n                vertical-align: top;\r\n            }\r\n            .marketItem > div > img {\r\n                height: 43.5px;\r\n                width: 43.5px;\r\n                transform: translate(18.25px, 13.25px);\r\n            }\r\n            .marketItem > div > span {\r\n                display: inline-block;\r\n                transform: translateY(19px);\r\n            }\r\n            .marketItem > div > span:nth-of-type(1) {\r\n                font-weight: bold;\r\n            }\r\n            .marketItem > div > span:nth-of-type(2) {\r\n                color: #ACBBC2;\r\n                font-size: 14px;\r\n            }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\n// Borrow/Supply cells formatting\r\nfunction FormatItem(props) {\r\n    return(\r\n        <>\r\n            <div className=\"format-item\">\r\n                <span>${props.type === 'supply' ? formatNum(props.gross_supply) : formatNum(props.gross_borrow)}</span>\r\n                <br />\r\n                {props.type === 'supply' ? (\r\n                    props.gross_supply_change > 0 ? (\r\n                        <span className=\"change-up\">+{props.gross_supply_change.toFixed(2)}%</span>\r\n                    ) : (\r\n                        <span className=\"change-down\">{props.gross_supply_change.toFixed(2)}%</span>\r\n                    )\r\n                ) : (\r\n                    props.gross_borrow_change > 0 ? (\r\n                        <span className=\"change-up\">+{props.gross_borrow_change.toFixed(2)}%</span>\r\n                    ) : (\r\n                        <span className=\"change-down\">{props.gross_borrow_change.toFixed(2)}%</span>\r\n                    )\r\n                )}\r\n            </div>\r\n            <style jsx>{`\r\n            .format-item {\r\n                height: 70px;\r\n            }\r\n            .format-item > span {\r\n                display: inline-block;\r\n                transform: translateY(18px);\r\n            }\r\n            .format-item > span:nth-of-type(1) {\r\n                font-weight: 500;\r\n            }\r\n            .change-up {\r\n                color: rgb(0, 190, 0);\r\n                font-size: 14px;\r\n            }\r\n            .change-down {\r\n                color: rgb(214, 2, 44);\r\n                font-size: 14px;\r\n            }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\n// APY cells formatting\r\nfunction FormatItemAPY(props) {\r\n    return(\r\n        <>\r\n            <div className=\"format-item\">\r\n                <span>{props.type === 'supply' ? props.supply_apy : props.borrow_apy}%</span>\r\n                <br />\r\n                {props.type === 'supply' ? (\r\n                    props.supply_apy_change > 0 ? (\r\n                        <span className=\"change-up\">+{props.supply_apy_change.toFixed(2)}</span>\r\n                    ) : (\r\n                        <span className=\"change-down\">{props.supply_apy_change.toFixed(2)}</span>\r\n                    )\r\n                ) : (\r\n                    props.borrow_apy_change > 0 ? (\r\n                        <span className=\"change-up\">+{props.borrow_apy_change.toFixed(2)}</span>\r\n                    ) : (\r\n                        <span className=\"change-down\">{props.borrow_apy_change.toFixed(2)}</span>\r\n                    )\r\n                )}\r\n            </div>\r\n            <style jsx>{`\r\n            .format-item {\r\n                height: 70px;\r\n            }\r\n            .format-item > span {\r\n                display: inline-block;\r\n                transform: translateY(18px);\r\n            }\r\n            .format-item > span:nth-of-type(1) {\r\n                font-weight: 500;\r\n            }\r\n            .change-up {\r\n                color: rgb(0, 190, 0);\r\n                font-size: 14px;\r\n            }\r\n            .change-down {\r\n                color: rgb(214, 2, 44);\r\n                font-size: 14px;\r\n            }\r\n            `}</style>\r\n        </>\r\n    )\r\n}\r\n\r\n// Formats numbers similar to Compound dashboard look\r\nfunction formatNum(value) {\r\n    // If value > a million\r\n    if (value > 1000000) {\r\n        // Cleaned million formatting\r\n        return (value / 1000000).toFixed(2) + 'M';\r\n    } else if (value > 1000) {\r\n        // Else, cleaned thousands formatting\r\n        return (value / 1000).toFixed(0) + 'K';\r\n    }\r\n}\r\n\r\n// Input cell\r\nfunction CalcCell(props) {\r\n    // Updates array structure of parent state via updateDistribution function\r\n    function updateNum(value) {\r\n        props.updateDistribution(props.type === 'supply' ? 'supply' : 'borrow', props.symbol, parseFloat(value));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"calc\">\r\n                <input type=\"number\" step=\"any\" value={props.distribution[props.type === 'supply' ? 'supply' : 'borrow'][props.symbol]} placeholder={`${props.symbol} (USD) value`} min=\"0\" onChange={e => updateNum(e.target.value)} />\r\n            </div>\r\n            <style jsx>{`\r\n            .calc > input {\r\n                border: 1px solid #e7eaf3;\r\n                border-radius: 5px;\r\n                height: 30px;\r\n                transform: translateY(20px);\r\n                padding-left: 5px;\r\n            }\r\n            `}</style>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}