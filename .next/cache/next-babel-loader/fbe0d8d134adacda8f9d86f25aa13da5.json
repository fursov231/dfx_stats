{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\furso\\\\Desktop\\\\stat.farm\\\\components\\\\Transaction.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ReactTable from 'react-table-6'; // React-table\n\nimport { useState, useEffect } from 'react'; // State storage for calculations\n\nexport default function Transaction(props) {\n  let labels = []; // Setup labels array\n\n  let chart_data = []; // Setup COMP/USD data point array\n  // Loop through all data\n\n  for (let i = 0; i < props.data.length; i++) {\n    labels.push(moment.utc(props.data[i].time).format('MM/DD')); // Push formatted date data\n\n    chart_data.push(props.data[i].close); // Push formatted chart data\n  } // Chart rendering setup\n\n\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'DFX/USD',\n      backgroundColor: 'rgba(240,23,22,0.4)',\n      borderColor: 'rgba(240,23,22,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(240,23,22,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 0.5,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(240,23,22,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      data: chart_data\n    }]\n  };\n  return __jsx(React.Fragment, null, __jsx(Line, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1311891977\",\n    __self: this\n  }, \".chartjs-render-monitor{width:100% !important;height:90% !important;margin-top:1.5%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZnVyc29cXERlc2t0b3BcXHN0YXQuZmFybVxcY29tcG9uZW50c1xcVHJhbnNhY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0MrQixBQUd1QyxzQkFDQSxzQkFDTixnQkFDcEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxmdXJzb1xcRGVza3RvcFxcc3RhdC5mYXJtXFxjb21wb25lbnRzXFxUcmFuc2FjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdFRhYmxlIGZyb20gJ3JlYWN0LXRhYmxlLTYnIC8vIFJlYWN0LXRhYmxlXHJcbmltcG9ydCB7dXNlU3RhdGUsIHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnIC8vIFN0YXRlIHN0b3JhZ2UgZm9yIGNhbGN1bGF0aW9uc1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRyYW5zYWN0aW9uIChwcm9wcykge1xyXG4gICAgbGV0IGxhYmVscyA9IFtdOyAvLyBTZXR1cCBsYWJlbHMgYXJyYXlcclxuICAgIGxldCBjaGFydF9kYXRhID0gW107IC8vIFNldHVwIENPTVAvVVNEIGRhdGEgcG9pbnQgYXJyYXlcclxuXHJcbiAgICAvLyBMb29wIHRocm91Z2ggYWxsIGRhdGFcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvcHMuZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGxhYmVscy5wdXNoKG1vbWVudC51dGMocHJvcHMuZGF0YVtpXS50aW1lKS5mb3JtYXQoJ01NL0REJykpOyAvLyBQdXNoIGZvcm1hdHRlZCBkYXRlIGRhdGFcclxuICAgICAgICBjaGFydF9kYXRhLnB1c2gocHJvcHMuZGF0YVtpXS5jbG9zZSk7IC8vIFB1c2ggZm9ybWF0dGVkIGNoYXJ0IGRhdGFcclxuICAgIH1cclxuXHJcbiAgICAvLyBDaGFydCByZW5kZXJpbmcgc2V0dXBcclxuICAgIGNvbnN0IGRhdGEgPSB7XHJcbiAgICAgICAgbGFiZWxzOiBsYWJlbHMsXHJcbiAgICAgICAgZGF0YXNldHM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbGFiZWw6ICdERlgvVVNEJyxcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMjQwLDIzLDIyLDAuNCknLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDI0MCwyMywyMiwxKScsXHJcbiAgICAgICAgICAgICAgICBib3JkZXJDYXBTdHlsZTogJ2J1dHQnLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyRGFzaDogW10sXHJcbiAgICAgICAgICAgICAgICBib3JkZXJEYXNoT2Zmc2V0OiAwLjAsXHJcbiAgICAgICAgICAgICAgICBib3JkZXJKb2luU3R5bGU6ICdtaXRlcicsXHJcbiAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAncmdiYSgyNDAsMjMsMjIsMSknLFxyXG4gICAgICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6ICcjZmZmJyxcclxuICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyV2lkdGg6IDAuNSxcclxuICAgICAgICAgICAgICAgIHBvaW50SG92ZXJSYWRpdXM6IDUsXHJcbiAgICAgICAgICAgICAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiAncmdiYSgyNDAsMjMsMjIsMSknLFxyXG4gICAgICAgICAgICAgICAgcG9pbnRIb3ZlckJvcmRlckNvbG9yOiAncmdiYSgyMjAsMjIwLDIyMCwxKScsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBjaGFydF9kYXRhXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8TGluZSBkYXRhPXtkYXRhfSAvPlxyXG4gICAgICAgICAgICA8c3R5bGUgZ2xvYmFsIGpzeD57YFxyXG4gICAgICAgICAgICAuY2hhcnRqcy1yZW5kZXItbW9uaXRvciB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA5MCUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEuNSU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvPlxyXG4gICAgKTtcclxufSJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n}","map":{"version":3,"sources":["C:/Users/furso/Desktop/stat.farm/components/Transaction.js"],"names":["ReactTable","useState","useEffect","Transaction","props","labels","chart_data","i","data","length","push","moment","utc","time","format","close","datasets","label","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,eAAvB,C,CAAuC;;AACvC,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC,C,CAA0C;;AAG1C,eAAe,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AACxC,MAAIC,MAAM,GAAG,EAAb,CADwC,CACvB;;AACjB,MAAIC,UAAU,GAAG,EAAjB,CAFwC,CAEnB;AAErB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AACxCF,IAAAA,MAAM,CAACK,IAAP,CAAYC,MAAM,CAACC,GAAP,CAAWR,KAAK,CAACI,IAAN,CAAWD,CAAX,EAAcM,IAAzB,EAA+BC,MAA/B,CAAsC,OAAtC,CAAZ,EADwC,CACqB;;AAC7DR,IAAAA,UAAU,CAACI,IAAX,CAAgBN,KAAK,CAACI,IAAN,CAAWD,CAAX,EAAcQ,KAA9B,EAFwC,CAEF;AACzC,GARuC,CAUxC;;;AACA,QAAMP,IAAI,GAAG;AACTH,IAAAA,MAAM,EAAEA,MADC;AAETW,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,SADX;AAEIC,MAAAA,eAAe,EAAE,qBAFrB;AAGIC,MAAAA,WAAW,EAAE,mBAHjB;AAIIC,MAAAA,cAAc,EAAE,MAJpB;AAKIC,MAAAA,UAAU,EAAE,EALhB;AAMIC,MAAAA,gBAAgB,EAAE,GANtB;AAOIC,MAAAA,eAAe,EAAE,OAPrB;AAQIC,MAAAA,gBAAgB,EAAE,mBARtB;AASIC,MAAAA,oBAAoB,EAAE,MAT1B;AAUIC,MAAAA,gBAAgB,EAAE,GAVtB;AAWIC,MAAAA,gBAAgB,EAAE,CAXtB;AAYIC,MAAAA,yBAAyB,EAAE,mBAZ/B;AAaIC,MAAAA,qBAAqB,EAAE,qBAb3B;AAcIrB,MAAAA,IAAI,EAAEF;AAdV,KADM;AAFD,GAAb;AAsBA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAAA;AAAA;AAAA,02FADJ;AAYH","sourcesContent":["import ReactTable from 'react-table-6' // React-table\r\nimport {useState, useEffect} from 'react' // State storage for calculations\r\n\r\n\r\nexport default function Transaction (props) {\r\n    let labels = []; // Setup labels array\r\n    let chart_data = []; // Setup COMP/USD data point array\r\n\r\n    // Loop through all data\r\n    for (let i = 0; i < props.data.length; i++) {\r\n        labels.push(moment.utc(props.data[i].time).format('MM/DD')); // Push formatted date data\r\n        chart_data.push(props.data[i].close); // Push formatted chart data\r\n    }\r\n\r\n    // Chart rendering setup\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: 'DFX/USD',\r\n                backgroundColor: 'rgba(240,23,22,0.4)',\r\n                borderColor: 'rgba(240,23,22,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(240,23,22,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 0.5,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(240,23,22,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                data: chart_data\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Line data={data} />\r\n            <style global jsx>{`\r\n            .chartjs-render-monitor {\r\n                width: 100% !important;\r\n                height: 90% !important;\r\n                margin-top: 1.5%;\r\n            }\r\n            `}</style>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}