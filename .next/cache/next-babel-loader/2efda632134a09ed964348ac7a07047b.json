{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\furso\\\\Desktop\\\\stat.farm\\\\components\\\\Transaction.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Line } from 'react-chartjs-2'; // Chart.js line chart\n\nimport moment from 'moment'; // Moment to convert time data to readable format\n\nexport default function Transaction(props) {\n  let labels = []; // Setup labels array\n\n  let chart_data = []; // Setup COMP/USD data point array\n  // Loop through all data\n\n  for (let i = 0; i < props.data.length; i++) {\n    labels.push(moment.utc(props.data[i].time).format('MM/DD')); // Push formatted date data\n\n    chart_data.push(props.data[i].close); // Push formatted chart data\n  } // Chart rendering setup\n\n\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'DFX/USD',\n      backgroundColor: 'rgba(240,23,22,0.4)',\n      borderColor: 'rgba(240,23,22,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(240,23,22,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 0.5,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(240,23,22,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      data: chart_data\n    }]\n  };\n  return __jsx(React.Fragment, null, __jsx(Line, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"1311891977\",\n    __self: this\n  }, \".chartjs-render-monitor{width:100% !important;height:90% !important;margin-top:1.5%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZnVyc29cXERlc2t0b3BcXHN0YXQuZmFybVxcY29tcG9uZW50c1xcVHJhbnNhY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUMrQixBQUd1QyxzQkFDQSxzQkFDTixnQkFDcEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxmdXJzb1xcRGVza3RvcFxcc3RhdC5mYXJtXFxjb21wb25lbnRzXFxUcmFuc2FjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TGluZX0gZnJvbSAncmVhY3QtY2hhcnRqcy0yJyAvLyBDaGFydC5qcyBsaW5lIGNoYXJ0XHJcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JyAvLyBNb21lbnQgdG8gY29udmVydCB0aW1lIGRhdGEgdG8gcmVhZGFibGUgZm9ybWF0XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUcmFuc2FjdGlvbiAocHJvcHMpIHtcclxuICAgIGxldCBsYWJlbHMgPSBbXTsgLy8gU2V0dXAgbGFiZWxzIGFycmF5XHJcbiAgICBsZXQgY2hhcnRfZGF0YSA9IFtdOyAvLyBTZXR1cCBDT01QL1VTRCBkYXRhIHBvaW50IGFycmF5XHJcblxyXG4gICAgLy8gTG9vcCB0aHJvdWdoIGFsbCBkYXRhXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BzLmRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsYWJlbHMucHVzaChtb21lbnQudXRjKHByb3BzLmRhdGFbaV0udGltZSkuZm9ybWF0KCdNTS9ERCcpKTsgLy8gUHVzaCBmb3JtYXR0ZWQgZGF0ZSBkYXRhXHJcbiAgICAgICAgY2hhcnRfZGF0YS5wdXNoKHByb3BzLmRhdGFbaV0uY2xvc2UpOyAvLyBQdXNoIGZvcm1hdHRlZCBjaGFydCBkYXRhXHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hhcnQgcmVuZGVyaW5nIHNldHVwXHJcbiAgICBjb25zdCBkYXRhID0ge1xyXG4gICAgICAgIGxhYmVsczogbGFiZWxzLFxyXG4gICAgICAgIGRhdGFzZXRzOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGxhYmVsOiAnREZYL1VTRCcsXHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI0MCwyMywyMiwwLjQpJyxcclxuICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAncmdiYSgyNDAsMjMsMjIsMSknLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyQ2FwU3R5bGU6ICdidXR0JyxcclxuICAgICAgICAgICAgICAgIGJvcmRlckRhc2g6IFtdLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyRGFzaE9mZnNldDogMC4wLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVySm9pblN0eWxlOiAnbWl0ZXInLFxyXG4gICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogJ3JnYmEoMjQwLDIzLDIyLDEpJyxcclxuICAgICAgICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiAnI2ZmZicsXHJcbiAgICAgICAgICAgICAgICBwb2ludEJvcmRlcldpZHRoOiAwLjUsXHJcbiAgICAgICAgICAgICAgICBwb2ludEhvdmVyUmFkaXVzOiA1LFxyXG4gICAgICAgICAgICAgICAgcG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcjogJ3JnYmEoMjQwLDIzLDIyLDEpJyxcclxuICAgICAgICAgICAgICAgIHBvaW50SG92ZXJCb3JkZXJDb2xvcjogJ3JnYmEoMjIwLDIyMCwyMjAsMSknLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogY2hhcnRfZGF0YVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPExpbmUgZGF0YT17ZGF0YX0gLz5cclxuICAgICAgICAgICAgPHN0eWxlIGdsb2JhbCBqc3g+e2BcclxuICAgICAgICAgICAgLmNoYXJ0anMtcmVuZGVyLW1vbml0b3Ige1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogOTAlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxLjUlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICA8Lz5cclxuICAgICk7XHJcbn0iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\furso\\\\\\\\Desktop\\\\\\\\stat.farm\\\\\\\\components\\\\\\\\Transaction.js */\"));\n}","map":{"version":3,"sources":["C:/Users/furso/Desktop/stat.farm/components/Transaction.js"],"names":["Line","moment","Transaction","props","labels","chart_data","i","data","length","push","utc","time","format","close","datasets","label","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor"],"mappings":";;;;AAAA,SAAQA,IAAR,QAAmB,iBAAnB,C,CAAqC;;AACrC,OAAOC,MAAP,MAAmB,QAAnB,C,CAA4B;;AAE5B,eAAe,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AACxC,MAAIC,MAAM,GAAG,EAAb,CADwC,CACvB;;AACjB,MAAIC,UAAU,GAAG,EAAjB,CAFwC,CAEnB;AAErB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;AACxCF,IAAAA,MAAM,CAACK,IAAP,CAAYR,MAAM,CAACS,GAAP,CAAWP,KAAK,CAACI,IAAN,CAAWD,CAAX,EAAcK,IAAzB,EAA+BC,MAA/B,CAAsC,OAAtC,CAAZ,EADwC,CACqB;;AAC7DP,IAAAA,UAAU,CAACI,IAAX,CAAgBN,KAAK,CAACI,IAAN,CAAWD,CAAX,EAAcO,KAA9B,EAFwC,CAEF;AACzC,GARuC,CAUxC;;;AACA,QAAMN,IAAI,GAAG;AACTH,IAAAA,MAAM,EAAEA,MADC;AAETU,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,SADX;AAEIC,MAAAA,eAAe,EAAE,qBAFrB;AAGIC,MAAAA,WAAW,EAAE,mBAHjB;AAIIC,MAAAA,cAAc,EAAE,MAJpB;AAKIC,MAAAA,UAAU,EAAE,EALhB;AAMIC,MAAAA,gBAAgB,EAAE,GANtB;AAOIC,MAAAA,eAAe,EAAE,OAPrB;AAQIC,MAAAA,gBAAgB,EAAE,mBARtB;AASIC,MAAAA,oBAAoB,EAAE,MAT1B;AAUIC,MAAAA,gBAAgB,EAAE,GAVtB;AAWIC,MAAAA,gBAAgB,EAAE,CAXtB;AAYIC,MAAAA,yBAAyB,EAAE,mBAZ/B;AAaIC,MAAAA,qBAAqB,EAAE,qBAb3B;AAcIpB,MAAAA,IAAI,EAAEF;AAdV,KADM;AAFD,GAAb;AAsBA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAAA;AAAA;AAAA,82FADJ;AAYH","sourcesContent":["import {Line} from 'react-chartjs-2' // Chart.js line chart\r\nimport moment from 'moment' // Moment to convert time data to readable format\r\n\r\nexport default function Transaction (props) {\r\n    let labels = []; // Setup labels array\r\n    let chart_data = []; // Setup COMP/USD data point array\r\n\r\n    // Loop through all data\r\n    for (let i = 0; i < props.data.length; i++) {\r\n        labels.push(moment.utc(props.data[i].time).format('MM/DD')); // Push formatted date data\r\n        chart_data.push(props.data[i].close); // Push formatted chart data\r\n    }\r\n\r\n    // Chart rendering setup\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: 'DFX/USD',\r\n                backgroundColor: 'rgba(240,23,22,0.4)',\r\n                borderColor: 'rgba(240,23,22,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(240,23,22,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 0.5,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(240,23,22,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                data: chart_data\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Line data={data} />\r\n            <style global jsx>{`\r\n            .chartjs-render-monitor {\r\n                width: 100% !important;\r\n                height: 90% !important;\r\n                margin-top: 1.5%;\r\n            }\r\n            `}</style>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}